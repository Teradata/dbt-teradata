name: CI Integration Tests CSAE MAC
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - 'main'

jobs:
  createInstance:
    runs-on: ubuntu-latest
    name: Functional test
    outputs:
      RegularDB: ${{ steps.create-csae-environments.outputs.teradata-server-name }}
      QVCIDB: ${{ steps.create-csae-environments.outputs.teradata-server-name-qvci }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Define CSAE env name
        id: define-environment-name
        run: |
          echo "env-name=dbt-ci-$(date +%s%N)" >> $GITHUB_OUTPUT

      - name: Create CSAE environments
        id: create-csae-environments
        shell: bash
        run: |
          chmod 777 .github/workflows/scripts/createTestEnvironments.sh
          ./.github/workflows/scripts/createTestEnvironments.sh
        env:
          CSAE_TOKEN: ${{ secrets.CSAE_TOKEN_VARUN }}
          CSAE_ENV_PASSWORD: ${{ secrets.CSAE_ENV_PASSWORD }}
          CSAE_ENV_NAME: ${{ steps.define-environment-name.outputs.env-name}}
          
      - name: Install TTU
        shell: bash
        run: |
          aws s3 cp "$AWS_S3_PATH_OF_TTU_BUNDLE"/"$TTU_BUNDLE_FILE_NAME" .
          tar -xzf "$TTU_BUNDLE_FILE_NAME"
          cd TeradataToolsAndUtilitiesBase
          sudo ./setup.sh a
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_PATH_OF_TTU_BUNDLE: ${{ secrets.AWS_S3_PATH_OF_TTU_BUNDLE }}
          TTU_BUNDLE_FILE_NAME: ${{ secrets.TTU_BUNDLE_FILE_NAME }}

      - name: Prepare database
        shell: bash
        run: |
          export PATH=$PATH:"/opt/teradata/client/17.20/bin"

          cd md5_20080530/md5/src

          # prepare bteq script

          cat << EOF > /tmp/install_md5.bteq

          .SET EXITONDELAY ON MAXREQTIME 20
          .logon $DBT_TERADATA_SERVER_NAME/$DBT_TERADATA_USERNAME,$DBT_TERADATA_PASSWORD
          GRANT CREATE FUNCTION ON GLOBAL_FUNCTIONS TO $DBT_TERADATA_USERNAME;
          DATABASE GLOBAL_FUNCTIONS;
          .run file = hash_md5.btq
          GRANT EXECUTE FUNCTION ON GLOBAL_FUNCTIONS TO PUBLIC WITH GRANT OPTION;
          .logoff
          EOF

          bteq < /tmp/install_md5.bteq
          
          cd ../../../tests/functional/adapter
          
          cat << EOF > /tmp/create_procedure_in_tera.bteq
          .SET EXITONDELAY ON MAXREQTIME 20
          .logon $DBT_TERADATA_SERVER_NAME/$DBT_TERADATA_USERNAME,$DBT_TERADATA_PASSWORD
          create user dummy_test_tmode from dbc as permanent=100000000 BYTES,password=dummy_test_tmode;
          GRANT ALL ON dummy_test_tmode to dbc;
          create multiset table dummy_test_tmode.currency_table (amount  DECIMAL(18, 2), original_currency VARCHAR(3), converted_amount DECIMAL(18, 2));
          .COMPILE file = CurrencyConversionProcedureTERA.sql
          .logoff
          EOF
          
          bteq < /tmp/create_procedure_in_tera.bteq
          
          cat << EOF > /tmp/create_procedure_in_ansi.bteq
          .SET SESSION TRANSACTION ANSI;
          .SET EXITONDELAY ON MAXREQTIME 20
          .logon $DBT_TERADATA_SERVER_NAME/$DBT_TERADATA_USERNAME,$DBT_TERADATA_PASSWORD
          .COMPILE file = CurrencyConversionProcedureANSI.sql
          commit;
          .logoff
          EOF
          
          bteq < /tmp/create_procedure_in_ansi.bteq

        env:
          DBT_TERADATA_SERVER_NAME: ${{ steps.create-csae-environments.outputs.teradata-server-name }}
          DBT_TERADATA_USERNAME: dbc
          DBT_TERADATA_PASSWORD: ${{ secrets.CSAE_ENV_PASSWORD }}

          
   
  deleteInstace:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: createInstance
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        
      - name: Delete CSAE environment
        if: always()
        run: |
          chmod 777 .github/workflows/scripts/deleteTestEnvironments.sh
          ./.github/workflows/scripts/deleteTestEnvironments.sh
        env:
          CSAE_TOKEN: '${{ secrets.CSAE_TOKEN_VARUN }}'
          CSAE_ENV_NAME: '${{ needs.createInstance.outputs.RegularDB }}'
    
