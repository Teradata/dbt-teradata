17:20:07.355842 [debug] [MainThread]: Acquiring new teradata connection "_test"
17:20:07.355842 [debug] [MainThread]: Dropping schema "_ReferenceKey(database=None, schema='test16649904071164603043_test_basic', identifier=None)".
17:20:07.355842 [debug] [MainThread]: Using teradata connection "_test"
17:20:07.355842 [debug] [MainThread]: On _test: 
17:20:07.355842 [debug] [MainThread]: Opening a new connection, currently in state init
17:20:10.677794 [debug] [MainThread]: SQL status: OK in 3.32 seconds
17:20:10.679075 [debug] [MainThread]: Using teradata connection "_test"
17:20:10.680255 [debug] [MainThread]: On _test: DELETE DATABASE /*+ IF EXISTS */ "test16649904071164603043_test_basic" ALL;
17:20:11.007710 [debug] [MainThread]: teradata adapter: Teradata error: [Version 17.20.0.5] [Session 1900] [Teradata Database] [Error 3802] Database 'test16649904071164603043_test_basic' does not exist.
 at gosqldriver/teradatasql.formatError ErrorUtil.go:88
 at gosqldriver/teradatasql.(*teradataConnection).formatDatabaseError ErrorUtil.go:216
 at gosqldriver/teradatasql.(*teradataConnection).makeChainedDatabaseError ErrorUtil.go:232
 at gosqldriver/teradatasql.(*teradataConnection).processErrorParcel TeradataConnection.go:803
 at gosqldriver/teradatasql.(*TeradataRows).processResponseBundle TeradataRows.go:2229
 at gosqldriver/teradatasql.(*TeradataRows).executeSQLRequest TeradataRows.go:814
 at gosqldriver/teradatasql.newTeradataRows TeradataRows.go:673
 at gosqldriver/teradatasql.(*teradataStatement).QueryContext TeradataStatement.go:122
 at gosqldriver/teradatasql.(*teradataConnection).QueryContext TeradataConnection.go:1307
 at database/sql.ctxDriverQuery ctxutil.go:48
 at database/sql.(*DB).queryDC.func1 sql.go:1759
 at database/sql.withLock sql.go:3437
 at database/sql.(*DB).queryDC sql.go:1754
 at database/sql.(*Conn).QueryContext sql.go:2013
 at main.goCreateRows goside.go:666
 at _cgoexp_7cdf4597d74c_goCreateRows _cgo_gotypes.go:340
 at runtime.cgocallbackg1 cgocall.go:314
 at runtime.cgocallbackg cgocall.go:233
 at runtime.cgocallback asm_amd64.s:971
 at runtime.goexit asm_amd64.s:1571
17:20:11.014566 [debug] [MainThread]: On _test: ROLLBACK
17:20:11.347595 [debug] [MainThread]: Using teradata connection "_test"
17:20:11.347595 [debug] [MainThread]: On _test: 
17:20:11.350561 [debug] [MainThread]: SQL status: OK in 0.0 seconds
17:20:11.351093 [debug] [MainThread]: Using teradata connection "_test"
17:20:11.351663 [debug] [MainThread]: On _test: DROP DATABASE /*+ IF EXISTS */ "test16649904071164603043_test_basic";
17:20:11.678242 [debug] [MainThread]: teradata adapter: Teradata error: [Version 17.20.0.5] [Session 1900] [Teradata Database] [Error 3802] Database 'test16649904071164603043_test_basic' does not exist.
 at gosqldriver/teradatasql.formatError ErrorUtil.go:88
 at gosqldriver/teradatasql.(*teradataConnection).formatDatabaseError ErrorUtil.go:216
 at gosqldriver/teradatasql.(*teradataConnection).makeChainedDatabaseError ErrorUtil.go:232
 at gosqldriver/teradatasql.(*teradataConnection).processErrorParcel TeradataConnection.go:803
 at gosqldriver/teradatasql.(*TeradataRows).processResponseBundle TeradataRows.go:2229
 at gosqldriver/teradatasql.(*TeradataRows).executeSQLRequest TeradataRows.go:814
 at gosqldriver/teradatasql.newTeradataRows TeradataRows.go:673
 at gosqldriver/teradatasql.(*teradataStatement).QueryContext TeradataStatement.go:122
 at gosqldriver/teradatasql.(*teradataConnection).QueryContext TeradataConnection.go:1307
 at database/sql.ctxDriverQuery ctxutil.go:48
 at database/sql.(*DB).queryDC.func1 sql.go:1759
 at database/sql.withLock sql.go:3437
 at database/sql.(*DB).queryDC sql.go:1754
 at database/sql.(*Conn).QueryContext sql.go:2013
 at main.goCreateRows goside.go:666
 at _cgoexp_7cdf4597d74c_goCreateRows _cgo_gotypes.go:340
 at runtime.cgocallbackg1 cgocall.go:314
 at runtime.cgocallbackg cgocall.go:233
 at runtime.cgocallback asm_amd64.s:971
 at runtime.goexit asm_amd64.s:1571
17:20:11.678242 [debug] [MainThread]: On _test: ROLLBACK
17:20:12.008012 [debug] [MainThread]: On _test: Close
17:20:12.357337 [debug] [MainThread]: Acquiring new teradata connection "_test"
17:20:12.357879 [debug] [MainThread]: Creating schema "_ReferenceKey(database=None, schema='test16649904071164603043_test_basic', identifier=None)"
17:20:12.359519 [debug] [MainThread]: Using teradata connection "_test"
17:20:12.360064 [debug] [MainThread]: On _test: 
17:20:12.360609 [debug] [MainThread]: Opening a new connection, currently in state closed
17:20:15.657760 [debug] [MainThread]: SQL status: OK in 3.3 seconds
17:20:15.658336 [debug] [MainThread]: Using teradata connection "_test"
17:20:15.658901 [debug] [MainThread]: On _test: CREATE DATABASE "test16649904071164603043_test_basic"
    -- Teradata expects db sizing params on creation. This macro is probably
    -- useful only for testing. For production scenrios, a properly sized
    -- database (schema) will likely exist before dbt gets called
    AS PERMANENT = 60e6, -- 60MB
        SPOOL = 120e6; -- 120MB
17:20:16.417307 [debug] [MainThread]: SQL status: OK in 0.76 seconds
17:20:16.419716 [debug] [MainThread]: On _test: COMMIT
17:20:16.420319 [debug] [MainThread]: Using teradata connection "_test"
17:20:16.421185 [debug] [MainThread]: On _test: COMMIT
17:20:16.747908 [debug] [MainThread]: SQL status: OK in 0.33 seconds
17:20:16.749004 [debug] [MainThread]: On _test: Close
17:20:17.124118 [debug] [MainThread]: Connection '_test' was properly closed.


============================== 2022-10-05 17:20:17.124118 | 7c635932-44c8-442e-9bab-0bd610a78578 ==============================
17:20:17.124118 [info ] [MainThread]: Running with dbt=1.1.0
17:20:17.124118 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': 'C:\\Users\\vs255034\\AppData\\Local\\Temp\\pytest-of-vs255034\\pytest-10\\profile7', 'send_anonymous_usage_stats': False, 'event_buffer_size': 100000, 'quiet': False, 'no_print': False, 'show': False, 'which': 'seed', 'rpc_method': 'seed', 'indirect_selection': 'eager'}
17:20:17.124118 [debug] [MainThread]: Tracking: do not track
17:20:17.139735 [info ] [MainThread]: Partial parse save file not found. Starting full parse.
17:20:17.177498 [debug] [MainThread]: Parsing macros\adapters.sql
17:20:17.193041 [debug] [MainThread]: Parsing macros\catalog.sql
17:20:17.193041 [debug] [MainThread]: Parsing macros\materializations\incremental\helpers.sql
17:20:17.193041 [debug] [MainThread]: Parsing macros\materializations\incremental\incremental.sql
17:20:17.208699 [debug] [MainThread]: Parsing macros\materializations\seed\seed.sql
17:20:17.224319 [debug] [MainThread]: Parsing macros\materializations\snapshot\snapshot.sql
17:20:17.239943 [debug] [MainThread]: Parsing macros\materializations\snapshot\snapshot_merge.sql
17:20:17.239943 [debug] [MainThread]: Parsing macros\materializations\snapshot\strategies.sql
17:20:17.239943 [debug] [MainThread]: Parsing macros\materializations\test\test.sql
17:20:17.255562 [debug] [MainThread]: Parsing macros\adapters\columns.sql
17:20:17.255562 [debug] [MainThread]: Parsing macros\adapters\freshness.sql
17:20:17.255562 [debug] [MainThread]: Parsing macros\adapters\indexes.sql
17:20:17.255562 [debug] [MainThread]: Parsing macros\adapters\metadata.sql
17:20:17.273904 [debug] [MainThread]: Parsing macros\adapters\persist_docs.sql
17:20:17.277893 [debug] [MainThread]: Parsing macros\adapters\relation.sql
17:20:17.284875 [debug] [MainThread]: Parsing macros\adapters\schema.sql
17:20:17.286869 [debug] [MainThread]: Parsing macros\etc\datetime.sql
17:20:17.293850 [debug] [MainThread]: Parsing macros\etc\statement.sql
17:20:17.296845 [debug] [MainThread]: Parsing macros\generic_test_sql\accepted_values.sql
17:20:17.297847 [debug] [MainThread]: Parsing macros\generic_test_sql\not_null.sql
17:20:17.298837 [debug] [MainThread]: Parsing macros\generic_test_sql\relationships.sql
17:20:17.299811 [debug] [MainThread]: Parsing macros\generic_test_sql\unique.sql
17:20:17.300831 [debug] [MainThread]: Parsing macros\get_custom_name\get_custom_alias.sql
17:20:17.302332 [debug] [MainThread]: Parsing macros\get_custom_name\get_custom_database.sql
17:20:17.302332 [debug] [MainThread]: Parsing macros\get_custom_name\get_custom_schema.sql
17:20:17.302332 [debug] [MainThread]: Parsing macros\materializations\configs.sql
17:20:17.302332 [debug] [MainThread]: Parsing macros\materializations\hooks.sql
17:20:17.302332 [debug] [MainThread]: Parsing macros\materializations\models\incremental\column_helpers.sql
17:20:17.302332 [debug] [MainThread]: Parsing macros\materializations\models\incremental\incremental.sql
17:20:17.317988 [debug] [MainThread]: Parsing macros\materializations\models\incremental\is_incremental.sql
17:20:17.317988 [debug] [MainThread]: Parsing macros\materializations\models\incremental\merge.sql
17:20:17.333609 [debug] [MainThread]: Parsing macros\materializations\models\incremental\on_schema_change.sql
17:20:17.333609 [debug] [MainThread]: Parsing macros\materializations\models\table\create_table_as.sql
17:20:17.349230 [debug] [MainThread]: Parsing macros\materializations\models\table\table.sql
17:20:17.349230 [debug] [MainThread]: Parsing macros\materializations\models\view\create_or_replace_view.sql
17:20:17.349230 [debug] [MainThread]: Parsing macros\materializations\models\view\create_view_as.sql
17:20:17.349230 [debug] [MainThread]: Parsing macros\materializations\models\view\helpers.sql
17:20:17.349230 [debug] [MainThread]: Parsing macros\materializations\models\view\view.sql
17:20:17.364852 [debug] [MainThread]: Parsing macros\materializations\seeds\helpers.sql
17:20:17.380467 [debug] [MainThread]: Parsing macros\materializations\seeds\seed.sql
17:20:17.380467 [debug] [MainThread]: Parsing macros\materializations\snapshots\helpers.sql
17:20:17.394001 [debug] [MainThread]: Parsing macros\materializations\snapshots\snapshot.sql
17:20:17.409660 [debug] [MainThread]: Parsing macros\materializations\snapshots\snapshot_merge.sql
17:20:17.409660 [debug] [MainThread]: Parsing macros\materializations\snapshots\strategies.sql
17:20:17.409660 [debug] [MainThread]: Parsing macros\materializations\tests\helpers.sql
17:20:17.425279 [debug] [MainThread]: Parsing macros\materializations\tests\test.sql
17:20:17.425279 [debug] [MainThread]: Parsing macros\materializations\tests\where_subquery.sql
17:20:17.425279 [debug] [MainThread]: Parsing tests\generic\builtin.sql
17:20:17.658438 [info ] [MainThread]: Found 0 models, 0 tests, 3 snapshots, 0 analyses, 181 macros, 0 operations, 2 seed files, 0 sources, 0 exposures, 0 metrics
17:20:17.658438 [info ] [MainThread]: 
17:20:17.658438 [debug] [MainThread]: Acquiring new teradata connection "master"
17:20:17.669489 [debug] [ThreadPool]: Acquiring new teradata connection "list_schemas"
17:20:17.670512 [debug] [ThreadPool]: Using teradata connection "list_schemas"
17:20:17.670512 [debug] [ThreadPool]: On list_schemas: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "connection_name": "list_schemas"} */
SELECT DatabaseName AS schema_name
        FROM DBC.DatabasesV
17:20:17.670512 [debug] [ThreadPool]: Opening a new connection, currently in state init
17:20:21.647783 [debug] [ThreadPool]: SQL status: OK in 3.98 seconds
17:20:21.651548 [debug] [ThreadPool]: On list_schemas: Close
17:20:21.996400 [debug] [ThreadPool]: Acquiring new teradata connection "list_None_test16649904071164603043_test_basic"
17:20:21.996400 [debug] [ThreadPool]: Using teradata connection "list_None_test16649904071164603043_test_basic"
17:20:21.996400 [debug] [ThreadPool]: On list_None_test16649904071164603043_test_basic: 
17:20:21.996400 [debug] [ThreadPool]: Opening a new connection, currently in state init
17:20:25.308246 [debug] [ThreadPool]: SQL status: OK in 3.31 seconds
17:20:25.309432 [debug] [ThreadPool]: Using teradata connection "list_None_test16649904071164603043_test_basic"
17:20:25.310275 [debug] [ThreadPool]: On list_None_test16649904071164603043_test_basic: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "connection_name": "list_None_test16649904071164603043_test_basic"} */
SELECT
      NULL AS "database",
      TableName AS name,
      DatabaseName AS "schema",
      CASE WHEN TableKind = 'T' THEN 'table'
        WHEN TableKind = 'O' THEN 'table'
        WHEN TableKind = 'V' THEN 'view'
        ELSE TableKind
      END AS table_type
    FROM DBC.TablesV
    WHERE DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND TableKind IN ('T', 'V', 'O')

  
17:20:25.997373 [debug] [ThreadPool]: SQL status: OK in 0.69 seconds
17:20:25.998876 [debug] [ThreadPool]: On list_None_test16649904071164603043_test_basic: ROLLBACK
17:20:26.337634 [debug] [ThreadPool]: On list_None_test16649904071164603043_test_basic: Close
17:20:26.667554 [debug] [MainThread]: Using teradata connection "master"
17:20:26.668056 [debug] [MainThread]: On master: 
17:20:26.668056 [debug] [MainThread]: Opening a new connection, currently in state init
17:20:29.997691 [debug] [MainThread]: SQL status: OK in 3.33 seconds
17:20:29.998160 [debug] [MainThread]: On master: COMMIT
17:20:29.998382 [debug] [MainThread]: Using teradata connection "master"
17:20:29.998382 [debug] [MainThread]: On master: COMMIT
17:20:30.329911 [debug] [MainThread]: SQL status: OK in 0.33 seconds
17:20:30.330831 [debug] [MainThread]: On master: Close
17:20:30.667678 [info ] [MainThread]: Concurrency: 1 threads (target='default')
17:20:30.668742 [info ] [MainThread]: 
17:20:30.671568 [debug] [Thread-77 ]: Began running node seed.snapshot_strategy_check_cols.added
17:20:30.672110 [info ] [Thread-77 ]: 1 of 2 START seed file test16649904071164603043_test_basic.added ............... [RUN]
17:20:30.672651 [debug] [Thread-77 ]: Acquiring new teradata connection "seed.snapshot_strategy_check_cols.added"
17:20:30.672651 [debug] [Thread-77 ]: Began compiling node seed.snapshot_strategy_check_cols.added
17:20:30.673154 [debug] [Thread-77 ]: finished collecting timing info
17:20:30.673214 [debug] [Thread-77 ]: Began executing node seed.snapshot_strategy_check_cols.added
17:20:30.676460 [debug] [Thread-77 ]: model : {'raw_sql': '', 'resource_type': 'seed', 'depends_on': {'macros': [], 'nodes': []}, 'config': {'enabled': True, 'tags': [], 'meta': {}, 'materialized': 'seed', 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'on_schema_change': 'ignore', 'post-hook': [], 'pre-hook': []}, 'schema': 'test16649904071164603043_test_basic', 'fqn': ['snapshot_strategy_check_cols', 'added'], 'unique_id': 'seed.snapshot_strategy_check_cols.added', 'package_name': 'snapshot_strategy_check_cols', 'root_path': 'C:\\Users\\vs255034\\AppData\\Local\\Temp\\pytest-of-vs255034\\pytest-10\\project7', 'path': 'added.csv', 'original_file_path': 'seeds\\added.csv', 'name': 'added', 'alias': 'added', 'checksum': {'name': 'sha256', 'checksum': 'a3d9dd9bfad23ea273491e1e26380b03d4cac45a27dd4e9199dedaeb77c12cbd'}, 'tags': [], 'refs': [], 'sources': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True}, 'deferred': False, 'unrendered_config': {}, 'created_at': 1664990417.6258767}
17:20:30.677002 [debug] [Thread-77 ]: Using teradata connection "seed.snapshot_strategy_check_cols.added"
17:20:30.677002 [debug] [Thread-77 ]: On seed.snapshot_strategy_check_cols.added: 
17:20:30.677002 [debug] [Thread-77 ]: Opening a new connection, currently in state init
17:20:33.957327 [debug] [Thread-77 ]: SQL status: OK in 3.28 seconds
17:20:33.957864 [debug] [Thread-77 ]: Using teradata connection "seed.snapshot_strategy_check_cols.added"
17:20:33.958462 [debug] [Thread-77 ]: On seed.snapshot_strategy_check_cols.added: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "seed.snapshot_strategy_check_cols.added"} */

    
    CREATE  TABLE "test16649904071164603043_test_basic"."added"
    
    ("id" INTEGER,"name" LONG VARCHAR,"some_date" TIMESTAMP(0))
    ;

  
17:20:34.630454 [debug] [Thread-77 ]: SQL status: OK in 0.67 seconds
17:20:34.633232 [debug] [Thread-77 ]: Using teradata connection "seed.snapshot_strategy_check_cols.added"
17:20:34.633232 [debug] [Thread-77 ]: On seed.snapshot_strategy_check_cols.added: insert into "test16649904071164603043_test_basic"."added" ("id", "name", "some_date") values
                (?,?,?)
        ...
17:20:35.297687 [debug] [Thread-77 ]: SQL status: OK in 0.66 seconds
17:20:35.298248 [debug] [Thread-77 ]: Writing runtime SQL for node "seed.snapshot_strategy_check_cols.added"
17:20:35.308173 [debug] [Thread-77 ]: On seed.snapshot_strategy_check_cols.added: COMMIT
17:20:35.308173 [debug] [Thread-77 ]: Using teradata connection "seed.snapshot_strategy_check_cols.added"
17:20:35.308712 [debug] [Thread-77 ]: On seed.snapshot_strategy_check_cols.added: COMMIT
17:20:35.637760 [debug] [Thread-77 ]: SQL status: OK in 0.33 seconds
17:20:35.638474 [debug] [Thread-77 ]: finished collecting timing info
17:20:35.638759 [debug] [Thread-77 ]: On seed.snapshot_strategy_check_cols.added: Close
17:20:35.978011 [info ] [Thread-77 ]: 1 of 2 OK loaded seed file test16649904071164603043_test_basic.added ........... [[32mINSERT 20[0m in 5.31s]
17:20:35.978514 [debug] [Thread-77 ]: Finished running node seed.snapshot_strategy_check_cols.added
17:20:35.979029 [debug] [Thread-77 ]: Began running node seed.snapshot_strategy_check_cols.base
17:20:35.979795 [info ] [Thread-77 ]: 2 of 2 START seed file test16649904071164603043_test_basic.base ................ [RUN]
17:20:35.980323 [debug] [Thread-77 ]: Acquiring new teradata connection "seed.snapshot_strategy_check_cols.base"
17:20:35.980878 [debug] [Thread-77 ]: Began compiling node seed.snapshot_strategy_check_cols.base
17:20:35.980878 [debug] [Thread-77 ]: finished collecting timing info
17:20:35.981406 [debug] [Thread-77 ]: Began executing node seed.snapshot_strategy_check_cols.base
17:20:35.984630 [debug] [Thread-77 ]: model : {'raw_sql': '', 'resource_type': 'seed', 'depends_on': {'macros': [], 'nodes': []}, 'config': {'enabled': True, 'tags': [], 'meta': {}, 'materialized': 'seed', 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'on_schema_change': 'ignore', 'post-hook': [], 'pre-hook': []}, 'schema': 'test16649904071164603043_test_basic', 'fqn': ['snapshot_strategy_check_cols', 'base'], 'unique_id': 'seed.snapshot_strategy_check_cols.base', 'package_name': 'snapshot_strategy_check_cols', 'root_path': 'C:\\Users\\vs255034\\AppData\\Local\\Temp\\pytest-of-vs255034\\pytest-10\\project7', 'path': 'base.csv', 'original_file_path': 'seeds\\base.csv', 'name': 'base', 'alias': 'base', 'checksum': {'name': 'sha256', 'checksum': '86dc7fd6521185b45bd27b5f5d2c808d6b61781ee713e439016f1ebc221c955d'}, 'tags': [], 'refs': [], 'sources': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True}, 'deferred': False, 'unrendered_config': {}, 'created_at': 1664990417.6258767}
17:20:35.985162 [debug] [Thread-77 ]: Using teradata connection "seed.snapshot_strategy_check_cols.base"
17:20:35.986226 [debug] [Thread-77 ]: On seed.snapshot_strategy_check_cols.base: 
17:20:35.986226 [debug] [Thread-77 ]: Opening a new connection, currently in state closed
17:20:39.277121 [debug] [Thread-77 ]: SQL status: OK in 3.29 seconds
17:20:39.277121 [debug] [Thread-77 ]: Using teradata connection "seed.snapshot_strategy_check_cols.base"
17:20:39.277671 [debug] [Thread-77 ]: On seed.snapshot_strategy_check_cols.base: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "seed.snapshot_strategy_check_cols.base"} */

    
    CREATE  TABLE "test16649904071164603043_test_basic"."base"
    
    ("id" INTEGER,"name" LONG VARCHAR,"some_date" TIMESTAMP(0))
    ;

  
17:20:39.948113 [debug] [Thread-77 ]: SQL status: OK in 0.67 seconds
17:20:39.951114 [debug] [Thread-77 ]: Using teradata connection "seed.snapshot_strategy_check_cols.base"
17:20:39.951114 [debug] [Thread-77 ]: On seed.snapshot_strategy_check_cols.base: insert into "test16649904071164603043_test_basic"."base" ("id", "name", "some_date") values
                (?,?,?)
        ...
17:20:40.617915 [debug] [Thread-77 ]: SQL status: OK in 0.67 seconds
17:20:40.618985 [debug] [Thread-77 ]: Writing runtime SQL for node "seed.snapshot_strategy_check_cols.base"
17:20:40.622356 [debug] [Thread-77 ]: On seed.snapshot_strategy_check_cols.base: COMMIT
17:20:40.622869 [debug] [Thread-77 ]: Using teradata connection "seed.snapshot_strategy_check_cols.base"
17:20:40.623450 [debug] [Thread-77 ]: On seed.snapshot_strategy_check_cols.base: COMMIT
17:20:40.947272 [debug] [Thread-77 ]: SQL status: OK in 0.32 seconds
17:20:40.948047 [debug] [Thread-77 ]: finished collecting timing info
17:20:40.948343 [debug] [Thread-77 ]: On seed.snapshot_strategy_check_cols.base: Close
17:20:41.286907 [info ] [Thread-77 ]: 2 of 2 OK loaded seed file test16649904071164603043_test_basic.base ............ [[32mINSERT 10[0m in 5.31s]
17:20:41.287958 [debug] [Thread-77 ]: Finished running node seed.snapshot_strategy_check_cols.base
17:20:41.288907 [debug] [MainThread]: Acquiring new teradata connection "master"
17:20:41.289508 [debug] [MainThread]: Using teradata connection "master"
17:20:41.289508 [debug] [MainThread]: On master: 
17:20:41.290082 [debug] [MainThread]: Opening a new connection, currently in state closed
17:20:44.598709 [debug] [MainThread]: SQL status: OK in 3.31 seconds
17:20:44.599252 [debug] [MainThread]: On master: COMMIT
17:20:44.599765 [debug] [MainThread]: Using teradata connection "master"
17:20:44.600333 [debug] [MainThread]: On master: COMMIT
17:20:44.927647 [debug] [MainThread]: SQL status: OK in 0.33 seconds
17:20:44.928507 [debug] [MainThread]: On master: Close
17:20:45.268471 [info ] [MainThread]: 
17:20:45.270189 [info ] [MainThread]: Finished running 2 seeds in 27.61s.
17:20:45.271340 [debug] [MainThread]: Connection 'master' was properly closed.
17:20:45.272503 [debug] [MainThread]: Connection 'list_schemas' was properly closed.
17:20:45.273464 [debug] [MainThread]: Connection 'list_None_test16649904071164603043_test_basic' was properly closed.
17:20:45.274430 [debug] [MainThread]: Connection 'seed.snapshot_strategy_check_cols.base' was properly closed.
17:20:45.282021 [info ] [MainThread]: 
17:20:45.282021 [info ] [MainThread]: [32mCompleted successfully[0m
17:20:45.282021 [info ] [MainThread]: 
17:20:45.282021 [info ] [MainThread]: Done. PASS=2 WARN=0 ERROR=0 SKIP=0 TOTAL=2


============================== 2022-10-05 17:20:45.297679 | 7c635932-44c8-442e-9bab-0bd610a78578 ==============================
17:20:45.297679 [info ] [MainThread]: Running with dbt=1.1.0
17:20:45.297679 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': 'C:\\Users\\vs255034\\AppData\\Local\\Temp\\pytest-of-vs255034\\pytest-10\\profile7', 'send_anonymous_usage_stats': False, 'event_buffer_size': 100000, 'quiet': False, 'no_print': False, 'which': 'snapshot', 'rpc_method': 'snapshot', 'indirect_selection': 'eager'}
17:20:45.297679 [debug] [MainThread]: Tracking: do not track
17:20:45.344543 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
17:20:45.344543 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
17:20:45.361824 [info ] [MainThread]: Found 0 models, 0 tests, 3 snapshots, 0 analyses, 181 macros, 0 operations, 2 seed files, 0 sources, 0 exposures, 0 metrics
17:20:45.362795 [info ] [MainThread]: 
17:20:45.362795 [debug] [MainThread]: Acquiring new teradata connection "master"
17:20:45.364478 [debug] [ThreadPool]: Acquiring new teradata connection "list_schemas"
17:20:45.365477 [debug] [ThreadPool]: Using teradata connection "list_schemas"
17:20:45.365477 [debug] [ThreadPool]: On list_schemas: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "connection_name": "list_schemas"} */
SELECT DatabaseName AS schema_name
        FROM DBC.DatabasesV
17:20:45.366480 [debug] [ThreadPool]: Opening a new connection, currently in state init
17:20:49.337761 [debug] [ThreadPool]: SQL status: OK in 3.97 seconds
17:20:49.339719 [debug] [ThreadPool]: On list_schemas: Close
17:20:49.678413 [debug] [ThreadPool]: Acquiring new teradata connection "list_None_test16649904071164603043_test_basic"
17:20:49.680063 [debug] [ThreadPool]: Using teradata connection "list_None_test16649904071164603043_test_basic"
17:20:49.680063 [debug] [ThreadPool]: On list_None_test16649904071164603043_test_basic: 
17:20:49.680574 [debug] [ThreadPool]: Opening a new connection, currently in state init
17:20:52.967057 [debug] [ThreadPool]: SQL status: OK in 3.29 seconds
17:20:52.967599 [debug] [ThreadPool]: Using teradata connection "list_None_test16649904071164603043_test_basic"
17:20:52.967599 [debug] [ThreadPool]: On list_None_test16649904071164603043_test_basic: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "connection_name": "list_None_test16649904071164603043_test_basic"} */
SELECT
      NULL AS "database",
      TableName AS name,
      DatabaseName AS "schema",
      CASE WHEN TableKind = 'T' THEN 'table'
        WHEN TableKind = 'O' THEN 'table'
        WHEN TableKind = 'V' THEN 'view'
        ELSE TableKind
      END AS table_type
    FROM DBC.TablesV
    WHERE DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND TableKind IN ('T', 'V', 'O')

  
17:20:53.648617 [debug] [ThreadPool]: SQL status: OK in 0.68 seconds
17:20:53.651398 [debug] [ThreadPool]: On list_None_test16649904071164603043_test_basic: ROLLBACK
17:20:53.977923 [debug] [ThreadPool]: On list_None_test16649904071164603043_test_basic: Close
17:20:54.321427 [debug] [MainThread]: Using teradata connection "master"
17:20:54.322533 [debug] [MainThread]: On master: 
17:20:54.323204 [debug] [MainThread]: Opening a new connection, currently in state init
17:20:57.628030 [debug] [MainThread]: SQL status: OK in 3.3 seconds
17:20:57.628590 [debug] [MainThread]: On master: COMMIT
17:20:57.628590 [debug] [MainThread]: Using teradata connection "master"
17:20:57.628590 [debug] [MainThread]: On master: COMMIT
17:20:57.957665 [debug] [MainThread]: SQL status: OK in 0.33 seconds
17:20:57.957665 [debug] [MainThread]: On master: Close
17:20:58.298447 [info ] [MainThread]: Concurrency: 1 threads (target='default')
17:20:58.299650 [info ] [MainThread]: 
17:20:58.303640 [debug] [Thread-81 ]: Began running node snapshot.snapshot_strategy_check_cols.cc_all_snapshot
17:20:58.303640 [info ] [Thread-81 ]: 1 of 3 START snapshot test16649904071164603043_test_basic.cc_all_snapshot ...... [RUN]
17:20:58.304533 [debug] [Thread-81 ]: Acquiring new teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:20:58.304826 [debug] [Thread-81 ]: Began compiling node snapshot.snapshot_strategy_check_cols.cc_all_snapshot
17:20:58.304826 [debug] [Thread-81 ]: Compiling snapshot.snapshot_strategy_check_cols.cc_all_snapshot
17:20:58.307594 [debug] [Thread-81 ]: finished collecting timing info
17:20:58.307594 [debug] [Thread-81 ]: Began executing node snapshot.snapshot_strategy_check_cols.cc_all_snapshot
17:20:58.324387 [debug] [Thread-81 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:20:58.324387 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */
SELECT DatabaseName AS schema_name
        FROM DBC.DatabasesV
17:20:58.324387 [debug] [Thread-81 ]: Opening a new connection, currently in state init
17:21:02.335838 [debug] [Thread-81 ]: SQL status: OK in 4.01 seconds
17:21:02.349887 [debug] [Thread-81 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:21:02.349887 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

    SELECT CURRENT_TIMESTAMP(6) AS snapshot_start
  
17:21:03.082320 [debug] [Thread-81 ]: SQL status: OK in 0.73 seconds
17:21:03.095879 [debug] [Thread-81 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:21:03.095879 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */
SELECT * FROM (
            
    
    select * from "test16649904071164603043_test_basic"."base"
        ) AS __dbt_sbq
        WHERE 0=1
    
17:21:03.772220 [debug] [Thread-81 ]: SQL status: OK in 0.68 seconds
17:21:03.784031 [debug] [Thread-81 ]: Writing runtime SQL for node "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:21:03.784031 [debug] [Thread-81 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:21:03.784031 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: 
17:21:03.789355 [debug] [Thread-81 ]: SQL status: OK in 0.01 seconds
17:21:03.789859 [debug] [Thread-81 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:21:03.789908 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

          
  CREATE  TABLE
  "test16649904071164603043_test_basic"."cc_all_snapshot"
  
    AS (
        

    SELECT sbq.*,
        HASHROW(coalesce(cast(id AS VARCHAR(50) ), '')
         || '|' || coalesce(cast(TO_TIMESTAMP_TZ('2022-10-05 10:21:02.550000+00:00') AS VARCHAR(50) ), '')
        ) AS dbt_scd_id,
        TO_TIMESTAMP_TZ('2022-10-05 10:21:02.550000+00:00') AS dbt_updated_at,
        TO_TIMESTAMP_TZ('2022-10-05 10:21:02.550000+00:00') AS dbt_valid_from,
        nullif(TO_TIMESTAMP_TZ('2022-10-05 10:21:02.550000+00:00'), TO_TIMESTAMP_TZ('2022-10-05 10:21:02.550000+00:00')) AS dbt_valid_to
    FROM (
        
    
    select * from "test16649904071164603043_test_basic"."base"
    ) AS sbq


      ) WITH DATA
  
  ;


      
17:21:06.777781 [debug] [Thread-81 ]: SQL status: OK in 2.99 seconds
17:21:06.781401 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: COMMIT
17:21:06.781401 [debug] [Thread-81 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:21:06.781904 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: COMMIT
17:21:07.108034 [debug] [Thread-81 ]: SQL status: OK in 0.33 seconds
17:21:07.110989 [debug] [Thread-81 ]: finished collecting timing info
17:21:07.112120 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: Close
17:21:07.467265 [info ] [Thread-81 ]: 1 of 3 OK snapshotted test16649904071164603043_test_basic.cc_all_snapshot ...... [[32mOK[0m in 9.16s]
17:21:07.468317 [debug] [Thread-81 ]: Finished running node snapshot.snapshot_strategy_check_cols.cc_all_snapshot
17:21:07.468848 [debug] [Thread-81 ]: Began running node snapshot.snapshot_strategy_check_cols.cc_date_snapshot
17:21:07.468899 [info ] [Thread-81 ]: 2 of 3 START snapshot test16649904071164603043_test_basic.cc_date_snapshot ..... [RUN]
17:21:07.470021 [debug] [Thread-81 ]: Acquiring new teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:21:07.470676 [debug] [Thread-81 ]: Began compiling node snapshot.snapshot_strategy_check_cols.cc_date_snapshot
17:21:07.470676 [debug] [Thread-81 ]: Compiling snapshot.snapshot_strategy_check_cols.cc_date_snapshot
17:21:07.473436 [debug] [Thread-81 ]: finished collecting timing info
17:21:07.474022 [debug] [Thread-81 ]: Began executing node snapshot.snapshot_strategy_check_cols.cc_date_snapshot
17:21:07.476237 [debug] [Thread-81 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:21:07.476237 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */
SELECT DatabaseName AS schema_name
        FROM DBC.DatabasesV
17:21:07.476789 [debug] [Thread-81 ]: Opening a new connection, currently in state closed
17:21:11.472601 [debug] [Thread-81 ]: SQL status: OK in 4.0 seconds
17:21:11.476833 [debug] [Thread-81 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:21:11.476833 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

    SELECT CURRENT_TIMESTAMP(6) AS snapshot_start
  
17:21:12.138216 [debug] [Thread-81 ]: SQL status: OK in 0.66 seconds
17:21:12.141352 [debug] [Thread-81 ]: Writing runtime SQL for node "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:21:12.142063 [debug] [Thread-81 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:21:12.142642 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: 
17:21:12.142683 [debug] [Thread-81 ]: SQL status: OK in 0.0 seconds
17:21:12.143225 [debug] [Thread-81 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:21:12.143225 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

          
  CREATE  TABLE
  "test16649904071164603043_test_basic"."cc_date_snapshot"
  
    AS (
        

    SELECT sbq.*,
        HASHROW(coalesce(cast(id AS VARCHAR(50) ), '')
         || '|' || coalesce(cast(TO_TIMESTAMP_TZ('2022-10-05 10:21:11.620000+00:00') AS VARCHAR(50) ), '')
        ) AS dbt_scd_id,
        TO_TIMESTAMP_TZ('2022-10-05 10:21:11.620000+00:00') AS dbt_updated_at,
        TO_TIMESTAMP_TZ('2022-10-05 10:21:11.620000+00:00') AS dbt_valid_from,
        nullif(TO_TIMESTAMP_TZ('2022-10-05 10:21:11.620000+00:00'), TO_TIMESTAMP_TZ('2022-10-05 10:21:11.620000+00:00')) AS dbt_valid_to
    FROM (
        
    
    select * from "test16649904071164603043_test_basic"."base"
    ) AS sbq


      ) WITH DATA
  
  ;


      
17:21:12.848160 [debug] [Thread-81 ]: SQL status: OK in 0.7 seconds
17:21:12.850575 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: COMMIT
17:21:12.850678 [debug] [Thread-81 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:21:12.850678 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: COMMIT
17:21:13.177877 [debug] [Thread-81 ]: SQL status: OK in 0.33 seconds
17:21:13.178839 [debug] [Thread-81 ]: finished collecting timing info
17:21:13.179383 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: Close
17:21:13.537797 [info ] [Thread-81 ]: 2 of 3 OK snapshotted test16649904071164603043_test_basic.cc_date_snapshot ..... [[32mOK[0m in 6.07s]
17:21:13.538341 [debug] [Thread-81 ]: Finished running node snapshot.snapshot_strategy_check_cols.cc_date_snapshot
17:21:13.538861 [debug] [Thread-81 ]: Began running node snapshot.snapshot_strategy_check_cols.cc_name_snapshot
17:21:13.539346 [info ] [Thread-81 ]: 3 of 3 START snapshot test16649904071164603043_test_basic.cc_name_snapshot ..... [RUN]
17:21:13.539991 [debug] [Thread-81 ]: Acquiring new teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:21:13.540210 [debug] [Thread-81 ]: Began compiling node snapshot.snapshot_strategy_check_cols.cc_name_snapshot
17:21:13.540210 [debug] [Thread-81 ]: Compiling snapshot.snapshot_strategy_check_cols.cc_name_snapshot
17:21:13.544585 [debug] [Thread-81 ]: finished collecting timing info
17:21:13.544585 [debug] [Thread-81 ]: Began executing node snapshot.snapshot_strategy_check_cols.cc_name_snapshot
17:21:13.547298 [debug] [Thread-81 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:21:13.547298 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */
SELECT DatabaseName AS schema_name
        FROM DBC.DatabasesV
17:21:13.547863 [debug] [Thread-81 ]: Opening a new connection, currently in state closed
17:21:17.560093 [debug] [Thread-81 ]: SQL status: OK in 4.01 seconds
17:21:17.562820 [debug] [Thread-81 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:21:17.563362 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

    SELECT CURRENT_TIMESTAMP(6) AS snapshot_start
  
17:21:18.217430 [debug] [Thread-81 ]: SQL status: OK in 0.65 seconds
17:21:18.220368 [debug] [Thread-81 ]: Writing runtime SQL for node "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:21:18.227924 [debug] [Thread-81 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:21:18.227924 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: 
17:21:18.228477 [debug] [Thread-81 ]: SQL status: OK in 0.0 seconds
17:21:18.228477 [debug] [Thread-81 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:21:18.229027 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

          
  CREATE  TABLE
  "test16649904071164603043_test_basic"."cc_name_snapshot"
  
    AS (
        

    SELECT sbq.*,
        HASHROW(coalesce(cast(id AS VARCHAR(50) ), '')
         || '|' || coalesce(cast(TO_TIMESTAMP_TZ('2022-10-05 10:21:17.710000+00:00') AS VARCHAR(50) ), '')
        ) AS dbt_scd_id,
        TO_TIMESTAMP_TZ('2022-10-05 10:21:17.710000+00:00') AS dbt_updated_at,
        TO_TIMESTAMP_TZ('2022-10-05 10:21:17.710000+00:00') AS dbt_valid_from,
        nullif(TO_TIMESTAMP_TZ('2022-10-05 10:21:17.710000+00:00'), TO_TIMESTAMP_TZ('2022-10-05 10:21:17.710000+00:00')) AS dbt_valid_to
    FROM (
        
    
    select * from "test16649904071164603043_test_basic"."base"
    ) AS sbq


      ) WITH DATA
  
  ;


      
17:21:18.970280 [debug] [Thread-81 ]: SQL status: OK in 0.74 seconds
17:21:18.971830 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: COMMIT
17:21:18.972338 [debug] [Thread-81 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:21:18.972338 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: COMMIT
17:21:19.297857 [debug] [Thread-81 ]: SQL status: OK in 0.32 seconds
17:21:19.298956 [debug] [Thread-81 ]: finished collecting timing info
17:21:19.299519 [debug] [Thread-81 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: Close
17:21:19.657635 [info ] [Thread-81 ]: 3 of 3 OK snapshotted test16649904071164603043_test_basic.cc_name_snapshot ..... [[32mOK[0m in 6.12s]
17:21:19.658189 [debug] [Thread-81 ]: Finished running node snapshot.snapshot_strategy_check_cols.cc_name_snapshot
17:21:19.658189 [debug] [MainThread]: Acquiring new teradata connection "master"
17:21:19.658189 [debug] [MainThread]: Using teradata connection "master"
17:21:19.658189 [debug] [MainThread]: On master: 
17:21:19.658189 [debug] [MainThread]: Opening a new connection, currently in state closed
17:21:22.959478 [debug] [MainThread]: SQL status: OK in 3.3 seconds
17:21:22.959976 [debug] [MainThread]: On master: COMMIT
17:21:22.960254 [debug] [MainThread]: Using teradata connection "master"
17:21:22.960254 [debug] [MainThread]: On master: COMMIT
17:21:23.287263 [debug] [MainThread]: SQL status: OK in 0.33 seconds
17:21:23.287826 [debug] [MainThread]: On master: Close
17:21:23.638452 [info ] [MainThread]: 
17:21:23.639202 [info ] [MainThread]: Finished running 3 snapshots in 38.28s.
17:21:23.639673 [debug] [MainThread]: Connection 'master' was properly closed.
17:21:23.640178 [debug] [MainThread]: Connection 'list_schemas' was properly closed.
17:21:23.640216 [debug] [MainThread]: Connection 'list_None_test16649904071164603043_test_basic' was properly closed.
17:21:23.640901 [debug] [MainThread]: Connection 'snapshot.snapshot_strategy_check_cols.cc_name_snapshot' was properly closed.
17:21:23.644906 [info ] [MainThread]: 
17:21:23.645411 [info ] [MainThread]: [32mCompleted successfully[0m
17:21:23.645411 [info ] [MainThread]: 
17:21:23.645955 [info ] [MainThread]: Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
17:21:23.646573 [debug] [MainThread]: Acquiring new teradata connection "_test"
17:21:23.647112 [debug] [MainThread]: Opening a new connection, currently in state init
17:21:27.707448 [debug] [MainThread]: On _test: Close
17:21:28.058750 [debug] [MainThread]: Acquiring new teradata connection "_test"
17:21:28.059557 [debug] [MainThread]: Opening a new connection, currently in state closed
17:21:32.048156 [debug] [MainThread]: On _test: Close
17:21:32.397385 [debug] [MainThread]: Acquiring new teradata connection "_test"
17:21:32.398342 [debug] [MainThread]: Opening a new connection, currently in state closed
17:21:36.437528 [debug] [MainThread]: On _test: Close
17:21:36.778028 [debug] [MainThread]: Acquiring new teradata connection "_test"
17:21:36.778589 [debug] [MainThread]: Opening a new connection, currently in state closed
17:21:40.749208 [debug] [MainThread]: On _test: Close
17:21:41.100410 [debug] [MainThread]: Connection '_test' was properly closed.


============================== 2022-10-05 17:21:41.116035 | 7c635932-44c8-442e-9bab-0bd610a78578 ==============================
17:21:41.116035 [info ] [MainThread]: Running with dbt=1.1.0
17:21:41.116035 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': False, 'static_parser': True, 'profiles_dir': 'C:\\Users\\vs255034\\AppData\\Local\\Temp\\pytest-of-vs255034\\pytest-10\\profile7', 'send_anonymous_usage_stats': False, 'event_buffer_size': 100000, 'quiet': False, 'no_print': False, 'vars': 'seed_name: added', 'which': 'snapshot', 'rpc_method': 'snapshot', 'indirect_selection': 'eager'}
17:21:41.116035 [debug] [MainThread]: Tracking: do not track
17:21:41.116035 [debug] [MainThread]: Partial parsing not enabled
17:21:41.147277 [debug] [MainThread]: Parsing macros\adapters.sql
17:21:41.162899 [debug] [MainThread]: Parsing macros\catalog.sql
17:21:41.162899 [debug] [MainThread]: Parsing macros\materializations\incremental\helpers.sql
17:21:41.162899 [debug] [MainThread]: Parsing macros\materializations\incremental\incremental.sql
17:21:41.182529 [debug] [MainThread]: Parsing macros\materializations\seed\seed.sql
17:21:41.182529 [debug] [MainThread]: Parsing macros\materializations\snapshot\snapshot.sql
17:21:41.213775 [debug] [MainThread]: Parsing macros\materializations\snapshot\snapshot_merge.sql
17:21:41.213775 [debug] [MainThread]: Parsing macros\materializations\snapshot\strategies.sql
17:21:41.213775 [debug] [MainThread]: Parsing macros\materializations\test\test.sql
17:21:41.213775 [debug] [MainThread]: Parsing macros\adapters\columns.sql
17:21:41.229397 [debug] [MainThread]: Parsing macros\adapters\freshness.sql
17:21:41.229397 [debug] [MainThread]: Parsing macros\adapters\indexes.sql
17:21:41.229397 [debug] [MainThread]: Parsing macros\adapters\metadata.sql
17:21:41.229397 [debug] [MainThread]: Parsing macros\adapters\persist_docs.sql
17:21:41.245033 [debug] [MainThread]: Parsing macros\adapters\relation.sql
17:21:41.245033 [debug] [MainThread]: Parsing macros\adapters\schema.sql
17:21:41.245033 [debug] [MainThread]: Parsing macros\etc\datetime.sql
17:21:41.260639 [debug] [MainThread]: Parsing macros\etc\statement.sql
17:21:41.260639 [debug] [MainThread]: Parsing macros\generic_test_sql\accepted_values.sql
17:21:41.260639 [debug] [MainThread]: Parsing macros\generic_test_sql\not_null.sql
17:21:41.260639 [debug] [MainThread]: Parsing macros\generic_test_sql\relationships.sql
17:21:41.260639 [debug] [MainThread]: Parsing macros\generic_test_sql\unique.sql
17:21:41.260639 [debug] [MainThread]: Parsing macros\get_custom_name\get_custom_alias.sql
17:21:41.260639 [debug] [MainThread]: Parsing macros\get_custom_name\get_custom_database.sql
17:21:41.260639 [debug] [MainThread]: Parsing macros\get_custom_name\get_custom_schema.sql
17:21:41.276261 [debug] [MainThread]: Parsing macros\materializations\configs.sql
17:21:41.276261 [debug] [MainThread]: Parsing macros\materializations\hooks.sql
17:21:41.276261 [debug] [MainThread]: Parsing macros\materializations\models\incremental\column_helpers.sql
17:21:41.282766 [debug] [MainThread]: Parsing macros\materializations\models\incremental\incremental.sql
17:21:41.282766 [debug] [MainThread]: Parsing macros\materializations\models\incremental\is_incremental.sql
17:21:41.282766 [debug] [MainThread]: Parsing macros\materializations\models\incremental\merge.sql
17:21:41.298390 [debug] [MainThread]: Parsing macros\materializations\models\incremental\on_schema_change.sql
17:21:41.314012 [debug] [MainThread]: Parsing macros\materializations\models\table\create_table_as.sql
17:21:41.314012 [debug] [MainThread]: Parsing macros\materializations\models\table\table.sql
17:21:41.314012 [debug] [MainThread]: Parsing macros\materializations\models\view\create_or_replace_view.sql
17:21:41.314012 [debug] [MainThread]: Parsing macros\materializations\models\view\create_view_as.sql
17:21:41.329632 [debug] [MainThread]: Parsing macros\materializations\models\view\helpers.sql
17:21:41.329632 [debug] [MainThread]: Parsing macros\materializations\models\view\view.sql
17:21:41.329632 [debug] [MainThread]: Parsing macros\materializations\seeds\helpers.sql
17:21:41.345254 [debug] [MainThread]: Parsing macros\materializations\seeds\seed.sql
17:21:41.345254 [debug] [MainThread]: Parsing macros\materializations\snapshots\helpers.sql
17:21:41.360875 [debug] [MainThread]: Parsing macros\materializations\snapshots\snapshot.sql
17:21:41.360875 [debug] [MainThread]: Parsing macros\materializations\snapshots\snapshot_merge.sql
17:21:41.360875 [debug] [MainThread]: Parsing macros\materializations\snapshots\strategies.sql
17:21:41.383001 [debug] [MainThread]: Parsing macros\materializations\tests\helpers.sql
17:21:41.383001 [debug] [MainThread]: Parsing macros\materializations\tests\test.sql
17:21:41.383001 [debug] [MainThread]: Parsing macros\materializations\tests\where_subquery.sql
17:21:41.383001 [debug] [MainThread]: Parsing tests\generic\builtin.sql
17:21:41.603156 [info ] [MainThread]: Found 0 models, 0 tests, 3 snapshots, 0 analyses, 181 macros, 0 operations, 2 seed files, 0 sources, 0 exposures, 0 metrics
17:21:41.603156 [info ] [MainThread]: 
17:21:41.605165 [debug] [MainThread]: Acquiring new teradata connection "master"
17:21:41.605207 [debug] [ThreadPool]: Acquiring new teradata connection "list_schemas"
17:21:41.605207 [debug] [ThreadPool]: Using teradata connection "list_schemas"
17:21:41.605207 [debug] [ThreadPool]: On list_schemas: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "connection_name": "list_schemas"} */
SELECT DatabaseName AS schema_name
        FROM DBC.DatabasesV
17:21:41.605207 [debug] [ThreadPool]: Opening a new connection, currently in state init
17:21:45.578280 [debug] [ThreadPool]: SQL status: OK in 3.97 seconds
17:21:45.580475 [debug] [ThreadPool]: On list_schemas: Close
17:21:45.921526 [debug] [ThreadPool]: Acquiring new teradata connection "list_None_test16649904071164603043_test_basic"
17:21:45.924229 [debug] [ThreadPool]: Using teradata connection "list_None_test16649904071164603043_test_basic"
17:21:45.924764 [debug] [ThreadPool]: On list_None_test16649904071164603043_test_basic: 
17:21:45.924764 [debug] [ThreadPool]: Opening a new connection, currently in state init
17:21:49.237303 [debug] [ThreadPool]: SQL status: OK in 3.31 seconds
17:21:49.237877 [debug] [ThreadPool]: Using teradata connection "list_None_test16649904071164603043_test_basic"
17:21:49.238390 [debug] [ThreadPool]: On list_None_test16649904071164603043_test_basic: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "connection_name": "list_None_test16649904071164603043_test_basic"} */
SELECT
      NULL AS "database",
      TableName AS name,
      DatabaseName AS "schema",
      CASE WHEN TableKind = 'T' THEN 'table'
        WHEN TableKind = 'O' THEN 'table'
        WHEN TableKind = 'V' THEN 'view'
        ELSE TableKind
      END AS table_type
    FROM DBC.TablesV
    WHERE DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND TableKind IN ('T', 'V', 'O')

  
17:21:49.897807 [debug] [ThreadPool]: SQL status: OK in 0.66 seconds
17:21:49.900630 [debug] [ThreadPool]: On list_None_test16649904071164603043_test_basic: ROLLBACK
17:21:50.217553 [debug] [ThreadPool]: On list_None_test16649904071164603043_test_basic: Close
17:21:50.558296 [debug] [MainThread]: Using teradata connection "master"
17:21:50.558296 [debug] [MainThread]: On master: 
17:21:50.559248 [debug] [MainThread]: Opening a new connection, currently in state init
17:21:53.862561 [debug] [MainThread]: SQL status: OK in 3.3 seconds
17:21:53.868604 [debug] [MainThread]: On master: COMMIT
17:21:53.868954 [debug] [MainThread]: Using teradata connection "master"
17:21:53.868996 [debug] [MainThread]: On master: COMMIT
17:21:54.197486 [debug] [MainThread]: SQL status: OK in 0.33 seconds
17:21:54.197486 [debug] [MainThread]: On master: Close
17:21:54.527991 [info ] [MainThread]: Concurrency: 1 threads (target='default')
17:21:54.528540 [info ] [MainThread]: 
17:21:54.530287 [debug] [Thread-85 ]: Began running node snapshot.snapshot_strategy_check_cols.cc_all_snapshot
17:21:54.530836 [info ] [Thread-85 ]: 1 of 3 START snapshot test16649904071164603043_test_basic.cc_all_snapshot ...... [RUN]
17:21:54.531379 [debug] [Thread-85 ]: Acquiring new teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:21:54.531379 [debug] [Thread-85 ]: Began compiling node snapshot.snapshot_strategy_check_cols.cc_all_snapshot
17:21:54.531926 [debug] [Thread-85 ]: Compiling snapshot.snapshot_strategy_check_cols.cc_all_snapshot
17:21:54.534159 [debug] [Thread-85 ]: finished collecting timing info
17:21:54.535216 [debug] [Thread-85 ]: Began executing node snapshot.snapshot_strategy_check_cols.cc_all_snapshot
17:21:54.536915 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:21:54.537461 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */
SELECT DatabaseName AS schema_name
        FROM DBC.DatabasesV
17:21:54.537461 [debug] [Thread-85 ]: Opening a new connection, currently in state init
17:21:58.488317 [debug] [Thread-85 ]: SQL status: OK in 3.95 seconds
17:21:58.491950 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:21:58.492554 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

    SELECT CURRENT_TIMESTAMP(6) AS snapshot_start
  
17:21:59.147548 [debug] [Thread-85 ]: SQL status: OK in 0.65 seconds
17:21:59.151015 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:21:59.151527 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */
SELECT * FROM (
            
    
    select * from "test16649904071164603043_test_basic"."added"
        ) AS __dbt_sbq
        WHERE 0=1
    
17:21:59.818057 [debug] [Thread-85 ]: SQL status: OK in 0.67 seconds
17:21:59.819538 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:21:59.820270 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */
SELECT * FROM (
            SELECT * FROM "test16649904071164603043_test_basic"."cc_all_snapshot"
        ) AS __dbt_sbq
        WHERE 0=1
    
17:22:00.467865 [debug] [Thread-85 ]: SQL status: OK in 0.65 seconds
17:22:00.471789 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:22:00.472389 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */
DROP table /*+ IF EXISTS */ "test16649904071164603043_test_basic"."cc_all_snapshot__dbt_tmp";
17:22:00.797805 [debug] [Thread-85 ]: teradata adapter: Teradata error: [Version 17.20.0.5] [Session 1922] [Teradata Database] [Error 3807] Object 'test16649904071164603043_test_basic.cc_all_snapshot__dbt_tmp' does not exist.
 at gosqldriver/teradatasql.formatError ErrorUtil.go:88
 at gosqldriver/teradatasql.(*teradataConnection).formatDatabaseError ErrorUtil.go:216
 at gosqldriver/teradatasql.(*teradataConnection).makeChainedDatabaseError ErrorUtil.go:232
 at gosqldriver/teradatasql.(*teradataConnection).processErrorParcel TeradataConnection.go:803
 at gosqldriver/teradatasql.(*TeradataRows).processResponseBundle TeradataRows.go:2229
 at gosqldriver/teradatasql.(*TeradataRows).executeSQLRequest TeradataRows.go:814
 at gosqldriver/teradatasql.newTeradataRows TeradataRows.go:673
 at gosqldriver/teradatasql.(*teradataStatement).QueryContext TeradataStatement.go:122
 at gosqldriver/teradatasql.(*teradataConnection).QueryContext TeradataConnection.go:1307
 at database/sql.ctxDriverQuery ctxutil.go:48
 at database/sql.(*DB).queryDC.func1 sql.go:1759
 at database/sql.withLock sql.go:3437
 at database/sql.(*DB).queryDC sql.go:1754
 at database/sql.(*Conn).QueryContext sql.go:2013
 at main.goCreateRows goside.go:666
 at _cgoexp_7cdf4597d74c_goCreateRows _cgo_gotypes.go:340
 at runtime.cgocallbackg1 cgocall.go:314
 at runtime.cgocallbackg cgocall.go:233
 at runtime.cgocallback asm_amd64.s:971
 at runtime.goexit asm_amd64.s:1571
17:22:00.799752 [debug] [Thread-85 ]: use_qvci set to : false
17:22:00.800648 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:22:00.800648 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: 
17:22:00.801155 [debug] [Thread-85 ]: SQL status: OK in 0.0 seconds
17:22:00.801155 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:22:00.801666 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_all_snapshot' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:22:01.579744 [debug] [Thread-85 ]: SQL status: OK in 0.78 seconds
17:22:01.587120 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:22:01.587675 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

        
  CREATE  TABLE
  "test16649904071164603043_test_basic"."cc_all_snapshot__dbt_tmp"
  
    AS (
      SELECT * FROM (
        WITH snapshot_query AS (

        
    
    select * from "test16649904071164603043_test_basic"."added"

    ),

    snapshotted_data AS (

        SELECT snapshot.*,
            id AS dbt_unique_key

        FROM "test16649904071164603043_test_basic"."cc_all_snapshot" AS snapshot

    ),

    insertions_source_data AS (

        SELECT
            snapshot_query.*,
            id AS dbt_unique_key,
            TO_TIMESTAMP_TZ('2022-10-05 10:21:58.630000+00:00') AS dbt_updated_at,
            TO_TIMESTAMP_TZ('2022-10-05 10:21:58.630000+00:00') AS dbt_valid_from,
            nullif(TO_TIMESTAMP_TZ('2022-10-05 10:21:58.630000+00:00'), TO_TIMESTAMP_TZ('2022-10-05 10:21:58.630000+00:00')) AS dbt_valid_to,
            HASHROW(coalesce(cast(id AS VARCHAR(50) ), '')
         || '|' || coalesce(cast(TO_TIMESTAMP_TZ('2022-10-05 10:21:58.630000+00:00') AS VARCHAR(50) ), '')
        ) AS dbt_scd_id

        FROM snapshot_query
    ),

    updates_source_data AS (

        SELECT
            snapshot_query.*,
            id AS dbt_unique_key,
            TO_TIMESTAMP_TZ('2022-10-05 10:21:58.630000+00:00') AS dbt_updated_at,
            TO_TIMESTAMP_TZ('2022-10-05 10:21:58.630000+00:00') AS dbt_valid_from,
            TO_TIMESTAMP_TZ('2022-10-05 10:21:58.630000+00:00') AS dbt_valid_to

        FROM snapshot_query
    ),

    insertions AS (

        SELECT
            'insert' AS dbt_change_type,
            source_data.*

        FROM insertions_source_data AS source_data
        LEFT OUTER JOIN snapshotted_data ON snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
        WHERE snapshotted_data.dbt_unique_key IS NULL
           OR (
                snapshotted_data.dbt_unique_key IS NOT NULL
            AND snapshotted_data.dbt_valid_to IS NULL
            AND (
                (snapshotted_data.id <> source_data.id
        or
        (
            ((snapshotted_data.id IS NULL) AND NOT (source_data.id IS NULL))
            OR
            ((NOT snapshotted_data.id IS NULL) AND (source_data.id IS NULL))
        ) OR snapshotted_data.name <> source_data.name
        or
        (
            ((snapshotted_data.name IS NULL) AND NOT (source_data.name IS NULL))
            OR
            ((NOT snapshotted_data.name IS NULL) AND (source_data.name IS NULL))
        ) OR snapshotted_data.some_date <> source_data.some_date
        or
        (
            ((snapshotted_data.some_date IS NULL) AND NOT (source_data.some_date IS NULL))
            OR
            ((NOT snapshotted_data.some_date IS NULL) AND (source_data.some_date IS NULL))
        ))
            )
        )

    ),

    updates AS (

        SELECT
            'update' AS dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        FROM updates_source_data AS source_data
        JOIN snapshotted_data ON snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
        WHERE snapshotted_data.dbt_valid_to IS NULL
        AND (
            (snapshotted_data.id <> source_data.id
        or
        (
            ((snapshotted_data.id IS NULL) AND NOT (source_data.id IS NULL))
            OR
            ((NOT snapshotted_data.id IS NULL) AND (source_data.id IS NULL))
        ) OR snapshotted_data.name <> source_data.name
        or
        (
            ((snapshotted_data.name IS NULL) AND NOT (source_data.name IS NULL))
            OR
            ((NOT snapshotted_data.name IS NULL) AND (source_data.name IS NULL))
        ) OR snapshotted_data.some_date <> source_data.some_date
        or
        (
            ((snapshotted_data.some_date IS NULL) AND NOT (source_data.some_date IS NULL))
            OR
            ((NOT snapshotted_data.some_date IS NULL) AND (source_data.some_date IS NULL))
        ))
        )
    )

    SELECT * FROM insertions
    UNION ALL
    SELECT * FROM updates
      ) D
    ) WITH DATA
  
  ;


    
17:22:02.365543 [debug] [Thread-85 ]: SQL status: OK in 0.78 seconds
17:22:02.369382 [debug] [Thread-85 ]: use_qvci set to : false
17:22:02.369918 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:22:02.370460 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_all_snapshot__dbt_tmp' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:22:03.158396 [debug] [Thread-85 ]: SQL status: OK in 0.79 seconds
17:22:03.162664 [debug] [Thread-85 ]: use_qvci set to : false
17:22:03.163750 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:22:03.163750 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_all_snapshot' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:22:03.947822 [debug] [Thread-85 ]: SQL status: OK in 0.78 seconds
17:22:03.951846 [debug] [Thread-85 ]: use_qvci set to : false
17:22:03.953097 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:22:03.953128 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_all_snapshot__dbt_tmp' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:22:04.758220 [debug] [Thread-85 ]: SQL status: OK in 0.81 seconds
17:22:04.761182 [debug] [Thread-85 ]: use_qvci set to : false
17:22:04.762269 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:22:04.762269 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_all_snapshot' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:22:05.427996 [debug] [Thread-85 ]: SQL status: OK in 0.67 seconds
17:22:05.431112 [debug] [Thread-85 ]: use_qvci set to : false
17:22:05.431112 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:22:05.431112 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_all_snapshot__dbt_tmp' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:22:06.108170 [debug] [Thread-85 ]: SQL status: OK in 0.68 seconds
17:22:06.113236 [debug] [Thread-85 ]: Writing runtime SQL for node "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:22:06.113782 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:22:06.114355 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

          UPDATE "test16649904071164603043_test_basic"."cc_all_snapshot"
    FROM (SELECT dbt_scd_id, dbt_change_type, dbt_valid_to FROM "test16649904071164603043_test_basic"."cc_all_snapshot__dbt_tmp") AS DBT_INTERNAL_SOURCE
    SET dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    WHERE DBT_INTERNAL_SOURCE.dbt_scd_id = "test16649904071164603043_test_basic"."cc_all_snapshot".dbt_scd_id
      AND DBT_INTERNAL_SOURCE.dbt_change_type = 'update'
      AND "test16649904071164603043_test_basic"."cc_all_snapshot".dbt_valid_to IS NULL

      
17:22:06.775496 [debug] [Thread-85 ]: SQL status: OK in 0.66 seconds
17:22:06.788106 [debug] [Thread-85 ]: Writing runtime SQL for node "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:22:06.788106 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:22:06.788106 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

          INSERT INTO "test16649904071164603043_test_basic"."cc_all_snapshot" ("id", "name", "some_date", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    SELECT DBT_INTERNAL_SOURCE."id",DBT_INTERNAL_SOURCE."name",DBT_INTERNAL_SOURCE."some_date",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    FROM "test16649904071164603043_test_basic"."cc_all_snapshot__dbt_tmp" AS DBT_INTERNAL_SOURCE
    WHERE DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'

      
17:22:07.467540 [debug] [Thread-85 ]: SQL status: OK in 0.68 seconds
17:22:07.468069 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: COMMIT
17:22:07.468069 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:22:07.468069 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: COMMIT
17:22:07.798075 [debug] [Thread-85 ]: SQL status: OK in 0.33 seconds
17:22:07.802655 [debug] [Thread-85 ]: finished collecting timing info
17:22:07.803283 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: Close
17:22:08.138939 [info ] [Thread-85 ]: 1 of 3 OK snapshotted test16649904071164603043_test_basic.cc_all_snapshot ...... [[32mOK[0m in 13.61s]
17:22:08.139484 [debug] [Thread-85 ]: Finished running node snapshot.snapshot_strategy_check_cols.cc_all_snapshot
17:22:08.139484 [debug] [Thread-85 ]: Began running node snapshot.snapshot_strategy_check_cols.cc_date_snapshot
17:22:08.139484 [info ] [Thread-85 ]: 2 of 3 START snapshot test16649904071164603043_test_basic.cc_date_snapshot ..... [RUN]
17:22:08.139484 [debug] [Thread-85 ]: Acquiring new teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:22:08.139484 [debug] [Thread-85 ]: Began compiling node snapshot.snapshot_strategy_check_cols.cc_date_snapshot
17:22:08.139484 [debug] [Thread-85 ]: Compiling snapshot.snapshot_strategy_check_cols.cc_date_snapshot
17:22:08.139484 [debug] [Thread-85 ]: finished collecting timing info
17:22:08.139484 [debug] [Thread-85 ]: Began executing node snapshot.snapshot_strategy_check_cols.cc_date_snapshot
17:22:08.139484 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:22:08.139484 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */
SELECT DatabaseName AS schema_name
        FROM DBC.DatabasesV
17:22:08.139484 [debug] [Thread-85 ]: Opening a new connection, currently in state closed
17:22:12.128160 [debug] [Thread-85 ]: SQL status: OK in 3.99 seconds
17:22:12.129347 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:22:12.129347 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

    SELECT CURRENT_TIMESTAMP(6) AS snapshot_start
  
17:22:12.787366 [debug] [Thread-85 ]: SQL status: OK in 0.66 seconds
17:22:12.790601 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:22:12.790601 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */
DROP table /*+ IF EXISTS */ "test16649904071164603043_test_basic"."cc_date_snapshot__dbt_tmp";
17:22:13.118447 [debug] [Thread-85 ]: teradata adapter: Teradata error: [Version 17.20.0.5] [Session 1923] [Teradata Database] [Error 3807] Object 'test16649904071164603043_test_basic.cc_date_snapshot__dbt_tmp' does not exist.
 at gosqldriver/teradatasql.formatError ErrorUtil.go:88
 at gosqldriver/teradatasql.(*teradataConnection).formatDatabaseError ErrorUtil.go:216
 at gosqldriver/teradatasql.(*teradataConnection).makeChainedDatabaseError ErrorUtil.go:232
 at gosqldriver/teradatasql.(*teradataConnection).processErrorParcel TeradataConnection.go:803
 at gosqldriver/teradatasql.(*TeradataRows).processResponseBundle TeradataRows.go:2229
 at gosqldriver/teradatasql.(*TeradataRows).executeSQLRequest TeradataRows.go:814
 at gosqldriver/teradatasql.newTeradataRows TeradataRows.go:673
 at gosqldriver/teradatasql.(*teradataStatement).QueryContext TeradataStatement.go:122
 at gosqldriver/teradatasql.(*teradataConnection).QueryContext TeradataConnection.go:1307
 at database/sql.ctxDriverQuery ctxutil.go:48
 at database/sql.(*DB).queryDC.func1 sql.go:1759
 at database/sql.withLock sql.go:3437
 at database/sql.(*DB).queryDC sql.go:1754
 at database/sql.(*Conn).QueryContext sql.go:2013
 at main.goCreateRows goside.go:666
 at _cgoexp_7cdf4597d74c_goCreateRows _cgo_gotypes.go:340
 at runtime.cgocallbackg1 cgocall.go:314
 at runtime.cgocallbackg cgocall.go:233
 at runtime.cgocallback asm_amd64.s:971
 at runtime.goexit asm_amd64.s:1571
17:22:13.121781 [debug] [Thread-85 ]: use_qvci set to : false
17:22:13.122478 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:22:13.122993 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: 
17:22:13.123655 [debug] [Thread-85 ]: SQL status: OK in 0.0 seconds
17:22:13.123655 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:22:13.124169 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_date_snapshot' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:22:13.918265 [debug] [Thread-85 ]: SQL status: OK in 0.79 seconds
17:22:13.920438 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:22:13.921034 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

        
  CREATE  TABLE
  "test16649904071164603043_test_basic"."cc_date_snapshot__dbt_tmp"
  
    AS (
      SELECT * FROM (
        WITH snapshot_query AS (

        
    
    select * from "test16649904071164603043_test_basic"."added"

    ),

    snapshotted_data AS (

        SELECT snapshot.*,
            id AS dbt_unique_key

        FROM "test16649904071164603043_test_basic"."cc_date_snapshot" AS snapshot

    ),

    insertions_source_data AS (

        SELECT
            snapshot_query.*,
            id AS dbt_unique_key,
            TO_TIMESTAMP_TZ('2022-10-05 10:22:12.270000+00:00') AS dbt_updated_at,
            TO_TIMESTAMP_TZ('2022-10-05 10:22:12.270000+00:00') AS dbt_valid_from,
            nullif(TO_TIMESTAMP_TZ('2022-10-05 10:22:12.270000+00:00'), TO_TIMESTAMP_TZ('2022-10-05 10:22:12.270000+00:00')) AS dbt_valid_to,
            HASHROW(coalesce(cast(id AS VARCHAR(50) ), '')
         || '|' || coalesce(cast(TO_TIMESTAMP_TZ('2022-10-05 10:22:12.270000+00:00') AS VARCHAR(50) ), '')
        ) AS dbt_scd_id

        FROM snapshot_query
    ),

    updates_source_data AS (

        SELECT
            snapshot_query.*,
            id AS dbt_unique_key,
            TO_TIMESTAMP_TZ('2022-10-05 10:22:12.270000+00:00') AS dbt_updated_at,
            TO_TIMESTAMP_TZ('2022-10-05 10:22:12.270000+00:00') AS dbt_valid_from,
            TO_TIMESTAMP_TZ('2022-10-05 10:22:12.270000+00:00') AS dbt_valid_to

        FROM snapshot_query
    ),

    insertions AS (

        SELECT
            'insert' AS dbt_change_type,
            source_data.*

        FROM insertions_source_data AS source_data
        LEFT OUTER JOIN snapshotted_data ON snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
        WHERE snapshotted_data.dbt_unique_key IS NULL
           OR (
                snapshotted_data.dbt_unique_key IS NOT NULL
            AND snapshotted_data.dbt_valid_to IS NULL
            AND (
                (snapshotted_data.some_date <> source_data.some_date
        or
        (
            ((snapshotted_data.some_date IS NULL) AND NOT (source_data.some_date IS NULL))
            OR
            ((NOT snapshotted_data.some_date IS NULL) AND (source_data.some_date IS NULL))
        ))
            )
        )

    ),

    updates AS (

        SELECT
            'update' AS dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        FROM updates_source_data AS source_data
        JOIN snapshotted_data ON snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
        WHERE snapshotted_data.dbt_valid_to IS NULL
        AND (
            (snapshotted_data.some_date <> source_data.some_date
        or
        (
            ((snapshotted_data.some_date IS NULL) AND NOT (source_data.some_date IS NULL))
            OR
            ((NOT snapshotted_data.some_date IS NULL) AND (source_data.some_date IS NULL))
        ))
        )
    )

    SELECT * FROM insertions
    UNION ALL
    SELECT * FROM updates
      ) D
    ) WITH DATA
  
  ;


    
17:22:14.667964 [debug] [Thread-85 ]: SQL status: OK in 0.75 seconds
17:22:14.668600 [debug] [Thread-85 ]: use_qvci set to : false
17:22:14.668600 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:22:14.668600 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_date_snapshot__dbt_tmp' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:22:15.468349 [debug] [Thread-85 ]: SQL status: OK in 0.8 seconds
17:22:15.473111 [debug] [Thread-85 ]: use_qvci set to : false
17:22:15.473825 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:22:15.474393 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_date_snapshot' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:22:16.278393 [debug] [Thread-85 ]: SQL status: OK in 0.8 seconds
17:22:16.280658 [debug] [Thread-85 ]: use_qvci set to : false
17:22:16.280658 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:22:16.280658 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_date_snapshot__dbt_tmp' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:22:17.078334 [debug] [Thread-85 ]: SQL status: OK in 0.8 seconds
17:22:17.079653 [debug] [Thread-85 ]: use_qvci set to : false
17:22:17.079653 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:22:17.079653 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_date_snapshot' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:22:17.778339 [debug] [Thread-85 ]: SQL status: OK in 0.7 seconds
17:22:17.786570 [debug] [Thread-85 ]: use_qvci set to : false
17:22:17.787617 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:22:17.787659 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_date_snapshot__dbt_tmp' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:22:18.458333 [debug] [Thread-85 ]: SQL status: OK in 0.67 seconds
17:22:18.462792 [debug] [Thread-85 ]: Writing runtime SQL for node "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:22:18.465055 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:22:18.465618 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

          UPDATE "test16649904071164603043_test_basic"."cc_date_snapshot"
    FROM (SELECT dbt_scd_id, dbt_change_type, dbt_valid_to FROM "test16649904071164603043_test_basic"."cc_date_snapshot__dbt_tmp") AS DBT_INTERNAL_SOURCE
    SET dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    WHERE DBT_INTERNAL_SOURCE.dbt_scd_id = "test16649904071164603043_test_basic"."cc_date_snapshot".dbt_scd_id
      AND DBT_INTERNAL_SOURCE.dbt_change_type = 'update'
      AND "test16649904071164603043_test_basic"."cc_date_snapshot".dbt_valid_to IS NULL

      
17:22:19.125509 [debug] [Thread-85 ]: SQL status: OK in 0.66 seconds
17:22:19.140012 [debug] [Thread-85 ]: Writing runtime SQL for node "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:22:19.140012 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:22:19.140012 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

          INSERT INTO "test16649904071164603043_test_basic"."cc_date_snapshot" ("id", "name", "some_date", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    SELECT DBT_INTERNAL_SOURCE."id",DBT_INTERNAL_SOURCE."name",DBT_INTERNAL_SOURCE."some_date",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    FROM "test16649904071164603043_test_basic"."cc_date_snapshot__dbt_tmp" AS DBT_INTERNAL_SOURCE
    WHERE DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'

      
17:22:19.818401 [debug] [Thread-85 ]: SQL status: OK in 0.68 seconds
17:22:19.820279 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: COMMIT
17:22:19.820889 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:22:19.820889 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: COMMIT
17:22:20.148109 [debug] [Thread-85 ]: SQL status: OK in 0.33 seconds
17:22:20.148910 [debug] [Thread-85 ]: finished collecting timing info
17:22:20.148910 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: Close
17:22:20.498651 [info ] [Thread-85 ]: 2 of 3 OK snapshotted test16649904071164603043_test_basic.cc_date_snapshot ..... [[32mOK[0m in 12.36s]
17:22:20.500967 [debug] [Thread-85 ]: Finished running node snapshot.snapshot_strategy_check_cols.cc_date_snapshot
17:22:20.502050 [debug] [Thread-85 ]: Began running node snapshot.snapshot_strategy_check_cols.cc_name_snapshot
17:22:20.502696 [info ] [Thread-85 ]: 3 of 3 START snapshot test16649904071164603043_test_basic.cc_name_snapshot ..... [RUN]
17:22:20.503621 [debug] [Thread-85 ]: Acquiring new teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:22:20.503942 [debug] [Thread-85 ]: Began compiling node snapshot.snapshot_strategy_check_cols.cc_name_snapshot
17:22:20.504191 [debug] [Thread-85 ]: Compiling snapshot.snapshot_strategy_check_cols.cc_name_snapshot
17:22:20.506774 [debug] [Thread-85 ]: finished collecting timing info
17:22:20.507002 [debug] [Thread-85 ]: Began executing node snapshot.snapshot_strategy_check_cols.cc_name_snapshot
17:22:20.508814 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:22:20.508814 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */
SELECT DatabaseName AS schema_name
        FROM DBC.DatabasesV
17:22:20.508814 [debug] [Thread-85 ]: Opening a new connection, currently in state closed
17:22:24.468339 [debug] [Thread-85 ]: SQL status: OK in 3.96 seconds
17:22:24.475845 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:22:24.476844 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

    SELECT CURRENT_TIMESTAMP(6) AS snapshot_start
  
17:22:25.117620 [debug] [Thread-85 ]: SQL status: OK in 0.64 seconds
17:22:25.120889 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:22:25.120889 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */
DROP table /*+ IF EXISTS */ "test16649904071164603043_test_basic"."cc_name_snapshot__dbt_tmp";
17:22:25.447879 [debug] [Thread-85 ]: teradata adapter: Teradata error: [Version 17.20.0.5] [Session 1924] [Teradata Database] [Error 3807] Object 'test16649904071164603043_test_basic.cc_name_snapshot__dbt_tmp' does not exist.
 at gosqldriver/teradatasql.formatError ErrorUtil.go:88
 at gosqldriver/teradatasql.(*teradataConnection).formatDatabaseError ErrorUtil.go:216
 at gosqldriver/teradatasql.(*teradataConnection).makeChainedDatabaseError ErrorUtil.go:232
 at gosqldriver/teradatasql.(*teradataConnection).processErrorParcel TeradataConnection.go:803
 at gosqldriver/teradatasql.(*TeradataRows).processResponseBundle TeradataRows.go:2229
 at gosqldriver/teradatasql.(*TeradataRows).executeSQLRequest TeradataRows.go:814
 at gosqldriver/teradatasql.newTeradataRows TeradataRows.go:673
 at gosqldriver/teradatasql.(*teradataStatement).QueryContext TeradataStatement.go:122
 at gosqldriver/teradatasql.(*teradataConnection).QueryContext TeradataConnection.go:1307
 at database/sql.ctxDriverQuery ctxutil.go:48
 at database/sql.(*DB).queryDC.func1 sql.go:1759
 at database/sql.withLock sql.go:3437
 at database/sql.(*DB).queryDC sql.go:1754
 at database/sql.(*Conn).QueryContext sql.go:2013
 at main.goCreateRows goside.go:666
 at _cgoexp_7cdf4597d74c_goCreateRows _cgo_gotypes.go:340
 at runtime.cgocallbackg1 cgocall.go:314
 at runtime.cgocallbackg cgocall.go:233
 at runtime.cgocallback asm_amd64.s:971
 at runtime.goexit asm_amd64.s:1571
17:22:25.450169 [debug] [Thread-85 ]: use_qvci set to : false
17:22:25.451335 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:22:25.451863 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: 
17:22:25.452383 [debug] [Thread-85 ]: SQL status: OK in 0.0 seconds
17:22:25.452945 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:22:25.452945 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_name_snapshot' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:22:26.248630 [debug] [Thread-85 ]: SQL status: OK in 0.8 seconds
17:22:26.251459 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:22:26.251551 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

        
  CREATE  TABLE
  "test16649904071164603043_test_basic"."cc_name_snapshot__dbt_tmp"
  
    AS (
      SELECT * FROM (
        WITH snapshot_query AS (

        
    
    select * from "test16649904071164603043_test_basic"."added"

    ),

    snapshotted_data AS (

        SELECT snapshot.*,
            id AS dbt_unique_key

        FROM "test16649904071164603043_test_basic"."cc_name_snapshot" AS snapshot

    ),

    insertions_source_data AS (

        SELECT
            snapshot_query.*,
            id AS dbt_unique_key,
            TO_TIMESTAMP_TZ('2022-10-05 10:22:24.610000+00:00') AS dbt_updated_at,
            TO_TIMESTAMP_TZ('2022-10-05 10:22:24.610000+00:00') AS dbt_valid_from,
            nullif(TO_TIMESTAMP_TZ('2022-10-05 10:22:24.610000+00:00'), TO_TIMESTAMP_TZ('2022-10-05 10:22:24.610000+00:00')) AS dbt_valid_to,
            HASHROW(coalesce(cast(id AS VARCHAR(50) ), '')
         || '|' || coalesce(cast(TO_TIMESTAMP_TZ('2022-10-05 10:22:24.610000+00:00') AS VARCHAR(50) ), '')
        ) AS dbt_scd_id

        FROM snapshot_query
    ),

    updates_source_data AS (

        SELECT
            snapshot_query.*,
            id AS dbt_unique_key,
            TO_TIMESTAMP_TZ('2022-10-05 10:22:24.610000+00:00') AS dbt_updated_at,
            TO_TIMESTAMP_TZ('2022-10-05 10:22:24.610000+00:00') AS dbt_valid_from,
            TO_TIMESTAMP_TZ('2022-10-05 10:22:24.610000+00:00') AS dbt_valid_to

        FROM snapshot_query
    ),

    insertions AS (

        SELECT
            'insert' AS dbt_change_type,
            source_data.*

        FROM insertions_source_data AS source_data
        LEFT OUTER JOIN snapshotted_data ON snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
        WHERE snapshotted_data.dbt_unique_key IS NULL
           OR (
                snapshotted_data.dbt_unique_key IS NOT NULL
            AND snapshotted_data.dbt_valid_to IS NULL
            AND (
                (snapshotted_data.name <> source_data.name
        or
        (
            ((snapshotted_data.name IS NULL) AND NOT (source_data.name IS NULL))
            OR
            ((NOT snapshotted_data.name IS NULL) AND (source_data.name IS NULL))
        ))
            )
        )

    ),

    updates AS (

        SELECT
            'update' AS dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        FROM updates_source_data AS source_data
        JOIN snapshotted_data ON snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
        WHERE snapshotted_data.dbt_valid_to IS NULL
        AND (
            (snapshotted_data.name <> source_data.name
        or
        (
            ((snapshotted_data.name IS NULL) AND NOT (source_data.name IS NULL))
            OR
            ((NOT snapshotted_data.name IS NULL) AND (source_data.name IS NULL))
        ))
        )
    )

    SELECT * FROM insertions
    UNION ALL
    SELECT * FROM updates
      ) D
    ) WITH DATA
  
  ;


    
17:22:27.038171 [debug] [Thread-85 ]: SQL status: OK in 0.79 seconds
17:22:27.039249 [debug] [Thread-85 ]: use_qvci set to : false
17:22:27.039249 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:22:27.039249 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_name_snapshot__dbt_tmp' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:22:27.838684 [debug] [Thread-85 ]: SQL status: OK in 0.8 seconds
17:22:27.842818 [debug] [Thread-85 ]: use_qvci set to : false
17:22:27.843931 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:22:27.844103 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_name_snapshot' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:22:28.638381 [debug] [Thread-85 ]: SQL status: OK in 0.79 seconds
17:22:28.644496 [debug] [Thread-85 ]: use_qvci set to : false
17:22:28.645590 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:22:28.645590 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_name_snapshot__dbt_tmp' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:22:29.428332 [debug] [Thread-85 ]: SQL status: OK in 0.78 seconds
17:22:29.433449 [debug] [Thread-85 ]: use_qvci set to : false
17:22:29.433985 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:22:29.434518 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_name_snapshot' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:22:30.108333 [debug] [Thread-85 ]: SQL status: OK in 0.67 seconds
17:22:30.112434 [debug] [Thread-85 ]: use_qvci set to : false
17:22:30.113493 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:22:30.113534 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_name_snapshot__dbt_tmp' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:22:30.788328 [debug] [Thread-85 ]: SQL status: OK in 0.67 seconds
17:22:30.790857 [debug] [Thread-85 ]: Writing runtime SQL for node "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:22:30.791989 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:22:30.792444 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

          UPDATE "test16649904071164603043_test_basic"."cc_name_snapshot"
    FROM (SELECT dbt_scd_id, dbt_change_type, dbt_valid_to FROM "test16649904071164603043_test_basic"."cc_name_snapshot__dbt_tmp") AS DBT_INTERNAL_SOURCE
    SET dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    WHERE DBT_INTERNAL_SOURCE.dbt_scd_id = "test16649904071164603043_test_basic"."cc_name_snapshot".dbt_scd_id
      AND DBT_INTERNAL_SOURCE.dbt_change_type = 'update'
      AND "test16649904071164603043_test_basic"."cc_name_snapshot".dbt_valid_to IS NULL

      
17:22:31.477575 [debug] [Thread-85 ]: SQL status: OK in 0.68 seconds
17:22:31.478514 [debug] [Thread-85 ]: Writing runtime SQL for node "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:22:31.479716 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:22:31.480032 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

          INSERT INTO "test16649904071164603043_test_basic"."cc_name_snapshot" ("id", "name", "some_date", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    SELECT DBT_INTERNAL_SOURCE."id",DBT_INTERNAL_SOURCE."name",DBT_INTERNAL_SOURCE."some_date",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    FROM "test16649904071164603043_test_basic"."cc_name_snapshot__dbt_tmp" AS DBT_INTERNAL_SOURCE
    WHERE DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'

      
17:22:32.148284 [debug] [Thread-85 ]: SQL status: OK in 0.67 seconds
17:22:32.148830 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: COMMIT
17:22:32.148830 [debug] [Thread-85 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:22:32.148830 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: COMMIT
17:22:32.477681 [debug] [Thread-85 ]: SQL status: OK in 0.33 seconds
17:22:32.478746 [debug] [Thread-85 ]: finished collecting timing info
17:22:32.478788 [debug] [Thread-85 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: Close
17:22:32.828725 [info ] [Thread-85 ]: 3 of 3 OK snapshotted test16649904071164603043_test_basic.cc_name_snapshot ..... [[32mOK[0m in 12.32s]
17:22:32.829385 [debug] [Thread-85 ]: Finished running node snapshot.snapshot_strategy_check_cols.cc_name_snapshot
17:22:32.831106 [debug] [MainThread]: Acquiring new teradata connection "master"
17:22:32.831106 [debug] [MainThread]: Using teradata connection "master"
17:22:32.831641 [debug] [MainThread]: On master: 
17:22:32.832177 [debug] [MainThread]: Opening a new connection, currently in state closed
17:22:36.138376 [debug] [MainThread]: SQL status: OK in 3.31 seconds
17:22:36.138947 [debug] [MainThread]: On master: COMMIT
17:22:36.139121 [debug] [MainThread]: Using teradata connection "master"
17:22:36.139635 [debug] [MainThread]: On master: COMMIT
17:22:36.467929 [debug] [MainThread]: SQL status: OK in 0.33 seconds
17:22:36.469076 [debug] [MainThread]: On master: Close
17:22:36.828325 [info ] [MainThread]: 
17:22:36.829536 [info ] [MainThread]: Finished running 3 snapshots in 55.23s.
17:22:36.829536 [debug] [MainThread]: Connection 'master' was properly closed.
17:22:36.829536 [debug] [MainThread]: Connection 'list_schemas' was properly closed.
17:22:36.829536 [debug] [MainThread]: Connection 'list_None_test16649904071164603043_test_basic' was properly closed.
17:22:36.835195 [debug] [MainThread]: Connection 'snapshot.snapshot_strategy_check_cols.cc_name_snapshot' was properly closed.
17:22:36.836230 [info ] [MainThread]: 
17:22:36.836230 [info ] [MainThread]: [32mCompleted successfully[0m
17:22:36.836230 [info ] [MainThread]: 
17:22:36.836230 [info ] [MainThread]: Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
17:22:36.836230 [debug] [MainThread]: Acquiring new teradata connection "_test"
17:22:36.836230 [debug] [MainThread]: Opening a new connection, currently in state init
17:22:40.817691 [debug] [MainThread]: On _test: Close
17:22:41.168526 [debug] [MainThread]: Acquiring new teradata connection "_test"
17:22:41.169077 [debug] [MainThread]: Opening a new connection, currently in state closed
17:22:45.159107 [debug] [MainThread]: On _test: Close
17:22:45.508558 [debug] [MainThread]: Acquiring new teradata connection "_test"
17:22:45.508558 [debug] [MainThread]: Opening a new connection, currently in state closed
17:22:49.469135 [debug] [MainThread]: On _test: Close
17:22:49.817979 [debug] [MainThread]: Acquiring new teradata connection "_test"
17:22:49.818838 [debug] [MainThread]: Acquiring new teradata connection "_test"
17:22:49.819382 [debug] [MainThread]: Using teradata connection "_test"
17:22:49.819576 [debug] [MainThread]: On _test: 
17:22:49.819576 [debug] [MainThread]: Opening a new connection, currently in state closed
17:22:53.107630 [debug] [MainThread]: SQL status: OK in 3.29 seconds
17:22:53.108149 [debug] [MainThread]: Using teradata connection "_test"
17:22:53.108194 [debug] [MainThread]: On _test: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "connection_name": "_test"} */
update "test16649904071164603043_test_basic"."added" set some_date = some_date + interval '1' hour where id > 10 and id < 21
17:22:53.778233 [debug] [MainThread]: SQL status: OK in 0.67 seconds
17:22:53.778777 [debug] [MainThread]: On _test: COMMIT
17:22:53.779320 [debug] [MainThread]: Using teradata connection "_test"
17:22:53.779320 [debug] [MainThread]: On _test: COMMIT
17:22:54.108220 [debug] [MainThread]: SQL status: OK in 0.33 seconds
17:22:54.108220 [debug] [MainThread]: On _test: Close
17:22:54.447449 [debug] [MainThread]: Connection '_test' was properly closed.


============================== 2022-10-05 17:22:54.463104 | 7c635932-44c8-442e-9bab-0bd610a78578 ==============================
17:22:54.463104 [info ] [MainThread]: Running with dbt=1.1.0
17:22:54.463104 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': 'C:\\Users\\vs255034\\AppData\\Local\\Temp\\pytest-of-vs255034\\pytest-10\\profile7', 'send_anonymous_usage_stats': False, 'event_buffer_size': 100000, 'quiet': False, 'no_print': False, 'vars': 'seed_name: added', 'which': 'snapshot', 'rpc_method': 'snapshot', 'indirect_selection': 'eager'}
17:22:54.463104 [debug] [MainThread]: Tracking: do not track
17:22:54.737365 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
17:22:54.737365 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
17:22:54.737365 [info ] [MainThread]: Found 0 models, 0 tests, 3 snapshots, 0 analyses, 181 macros, 0 operations, 2 seed files, 0 sources, 0 exposures, 0 metrics
17:22:54.737365 [info ] [MainThread]: 
17:22:54.737365 [debug] [MainThread]: Acquiring new teradata connection "master"
17:22:54.753022 [debug] [ThreadPool]: Acquiring new teradata connection "list_schemas"
17:22:54.753022 [debug] [ThreadPool]: Using teradata connection "list_schemas"
17:22:54.753022 [debug] [ThreadPool]: On list_schemas: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "connection_name": "list_schemas"} */
SELECT DatabaseName AS schema_name
        FROM DBC.DatabasesV
17:22:54.753022 [debug] [ThreadPool]: Opening a new connection, currently in state init
17:22:58.717739 [debug] [ThreadPool]: SQL status: OK in 3.96 seconds
17:22:58.718647 [debug] [ThreadPool]: On list_schemas: Close
17:22:59.059837 [debug] [ThreadPool]: Acquiring new teradata connection "list_None_test16649904071164603043_test_basic"
17:22:59.061984 [debug] [ThreadPool]: Using teradata connection "list_None_test16649904071164603043_test_basic"
17:22:59.061984 [debug] [ThreadPool]: On list_None_test16649904071164603043_test_basic: 
17:22:59.062493 [debug] [ThreadPool]: Opening a new connection, currently in state init
17:23:02.368995 [debug] [ThreadPool]: SQL status: OK in 3.31 seconds
17:23:02.370233 [debug] [ThreadPool]: Using teradata connection "list_None_test16649904071164603043_test_basic"
17:23:02.371211 [debug] [ThreadPool]: On list_None_test16649904071164603043_test_basic: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "connection_name": "list_None_test16649904071164603043_test_basic"} */
SELECT
      NULL AS "database",
      TableName AS name,
      DatabaseName AS "schema",
      CASE WHEN TableKind = 'T' THEN 'table'
        WHEN TableKind = 'O' THEN 'table'
        WHEN TableKind = 'V' THEN 'view'
        ELSE TableKind
      END AS table_type
    FROM DBC.TablesV
    WHERE DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND TableKind IN ('T', 'V', 'O')

  
17:23:03.027735 [debug] [ThreadPool]: SQL status: OK in 0.66 seconds
17:23:03.029086 [debug] [ThreadPool]: On list_None_test16649904071164603043_test_basic: ROLLBACK
17:23:03.358458 [debug] [ThreadPool]: On list_None_test16649904071164603043_test_basic: Close
17:23:04.328406 [debug] [MainThread]: Using teradata connection "master"
17:23:04.328406 [debug] [MainThread]: On master: 
17:23:04.328406 [debug] [MainThread]: Opening a new connection, currently in state init
17:23:07.638786 [debug] [MainThread]: SQL status: OK in 3.31 seconds
17:23:07.639379 [debug] [MainThread]: On master: COMMIT
17:23:07.639379 [debug] [MainThread]: Using teradata connection "master"
17:23:07.639928 [debug] [MainThread]: On master: COMMIT
17:23:07.968369 [debug] [MainThread]: SQL status: OK in 0.33 seconds
17:23:07.968856 [debug] [MainThread]: On master: Close
17:23:08.298020 [info ] [MainThread]: Concurrency: 1 threads (target='default')
17:23:08.298577 [info ] [MainThread]: 
17:23:08.301784 [debug] [Thread-89 ]: Began running node snapshot.snapshot_strategy_check_cols.cc_all_snapshot
17:23:08.301797 [info ] [Thread-89 ]: 1 of 3 START snapshot test16649904071164603043_test_basic.cc_all_snapshot ...... [RUN]
17:23:08.302908 [debug] [Thread-89 ]: Acquiring new teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:08.303465 [debug] [Thread-89 ]: Began compiling node snapshot.snapshot_strategy_check_cols.cc_all_snapshot
17:23:08.304036 [debug] [Thread-89 ]: Compiling snapshot.snapshot_strategy_check_cols.cc_all_snapshot
17:23:08.307376 [debug] [Thread-89 ]: finished collecting timing info
17:23:08.307930 [debug] [Thread-89 ]: Began executing node snapshot.snapshot_strategy_check_cols.cc_all_snapshot
17:23:08.309551 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:08.309551 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */
SELECT DatabaseName AS schema_name
        FROM DBC.DatabasesV
17:23:08.309551 [debug] [Thread-89 ]: Opening a new connection, currently in state init
17:23:12.277921 [debug] [Thread-89 ]: SQL status: OK in 3.97 seconds
17:23:12.280554 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:12.280554 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

    SELECT CURRENT_TIMESTAMP(6) AS snapshot_start
  
17:23:12.937903 [debug] [Thread-89 ]: SQL status: OK in 0.66 seconds
17:23:12.938452 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:12.938452 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */
SELECT * FROM (
            
    
    select * from "test16649904071164603043_test_basic"."added"
        ) AS __dbt_sbq
        WHERE 0=1
    
17:23:13.607841 [debug] [Thread-89 ]: SQL status: OK in 0.67 seconds
17:23:13.612165 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:13.612886 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */
SELECT * FROM (
            SELECT * FROM "test16649904071164603043_test_basic"."cc_all_snapshot"
        ) AS __dbt_sbq
        WHERE 0=1
    
17:23:14.287946 [debug] [Thread-89 ]: SQL status: OK in 0.67 seconds
17:23:14.291285 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:14.291796 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */
DROP table /*+ IF EXISTS */ "test16649904071164603043_test_basic"."cc_all_snapshot__dbt_tmp";
17:23:14.967770 [debug] [Thread-89 ]: SQL status: OK in 0.68 seconds
17:23:14.970625 [debug] [Thread-89 ]: use_qvci set to : false
17:23:14.976797 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:14.976797 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: 
17:23:14.977354 [debug] [Thread-89 ]: SQL status: OK in 0.0 seconds
17:23:14.978136 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:14.978765 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_all_snapshot' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:23:15.668259 [debug] [Thread-89 ]: SQL status: OK in 0.69 seconds
17:23:15.671836 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:15.671836 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

        
  CREATE  TABLE
  "test16649904071164603043_test_basic"."cc_all_snapshot__dbt_tmp"
  
    AS (
      SELECT * FROM (
        WITH snapshot_query AS (

        
    
    select * from "test16649904071164603043_test_basic"."added"

    ),

    snapshotted_data AS (

        SELECT snapshot.*,
            id AS dbt_unique_key

        FROM "test16649904071164603043_test_basic"."cc_all_snapshot" AS snapshot

    ),

    insertions_source_data AS (

        SELECT
            snapshot_query.*,
            id AS dbt_unique_key,
            TO_TIMESTAMP_TZ('2022-10-05 10:23:12.420000+00:00') AS dbt_updated_at,
            TO_TIMESTAMP_TZ('2022-10-05 10:23:12.420000+00:00') AS dbt_valid_from,
            nullif(TO_TIMESTAMP_TZ('2022-10-05 10:23:12.420000+00:00'), TO_TIMESTAMP_TZ('2022-10-05 10:23:12.420000+00:00')) AS dbt_valid_to,
            HASHROW(coalesce(cast(id AS VARCHAR(50) ), '')
         || '|' || coalesce(cast(TO_TIMESTAMP_TZ('2022-10-05 10:23:12.420000+00:00') AS VARCHAR(50) ), '')
        ) AS dbt_scd_id

        FROM snapshot_query
    ),

    updates_source_data AS (

        SELECT
            snapshot_query.*,
            id AS dbt_unique_key,
            TO_TIMESTAMP_TZ('2022-10-05 10:23:12.420000+00:00') AS dbt_updated_at,
            TO_TIMESTAMP_TZ('2022-10-05 10:23:12.420000+00:00') AS dbt_valid_from,
            TO_TIMESTAMP_TZ('2022-10-05 10:23:12.420000+00:00') AS dbt_valid_to

        FROM snapshot_query
    ),

    insertions AS (

        SELECT
            'insert' AS dbt_change_type,
            source_data.*

        FROM insertions_source_data AS source_data
        LEFT OUTER JOIN snapshotted_data ON snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
        WHERE snapshotted_data.dbt_unique_key IS NULL
           OR (
                snapshotted_data.dbt_unique_key IS NOT NULL
            AND snapshotted_data.dbt_valid_to IS NULL
            AND (
                (snapshotted_data.id <> source_data.id
        or
        (
            ((snapshotted_data.id IS NULL) AND NOT (source_data.id IS NULL))
            OR
            ((NOT snapshotted_data.id IS NULL) AND (source_data.id IS NULL))
        ) OR snapshotted_data.name <> source_data.name
        or
        (
            ((snapshotted_data.name IS NULL) AND NOT (source_data.name IS NULL))
            OR
            ((NOT snapshotted_data.name IS NULL) AND (source_data.name IS NULL))
        ) OR snapshotted_data.some_date <> source_data.some_date
        or
        (
            ((snapshotted_data.some_date IS NULL) AND NOT (source_data.some_date IS NULL))
            OR
            ((NOT snapshotted_data.some_date IS NULL) AND (source_data.some_date IS NULL))
        ))
            )
        )

    ),

    updates AS (

        SELECT
            'update' AS dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        FROM updates_source_data AS source_data
        JOIN snapshotted_data ON snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
        WHERE snapshotted_data.dbt_valid_to IS NULL
        AND (
            (snapshotted_data.id <> source_data.id
        or
        (
            ((snapshotted_data.id IS NULL) AND NOT (source_data.id IS NULL))
            OR
            ((NOT snapshotted_data.id IS NULL) AND (source_data.id IS NULL))
        ) OR snapshotted_data.name <> source_data.name
        or
        (
            ((snapshotted_data.name IS NULL) AND NOT (source_data.name IS NULL))
            OR
            ((NOT snapshotted_data.name IS NULL) AND (source_data.name IS NULL))
        ) OR snapshotted_data.some_date <> source_data.some_date
        or
        (
            ((snapshotted_data.some_date IS NULL) AND NOT (source_data.some_date IS NULL))
            OR
            ((NOT snapshotted_data.some_date IS NULL) AND (source_data.some_date IS NULL))
        ))
        )
    )

    SELECT * FROM insertions
    UNION ALL
    SELECT * FROM updates
      ) D
    ) WITH DATA
  
  ;


    
17:23:16.468044 [debug] [Thread-89 ]: SQL status: OK in 0.8 seconds
17:23:16.470668 [debug] [Thread-89 ]: use_qvci set to : false
17:23:16.471219 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:16.471746 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_all_snapshot__dbt_tmp' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:23:17.158660 [debug] [Thread-89 ]: SQL status: OK in 0.69 seconds
17:23:17.162486 [debug] [Thread-89 ]: use_qvci set to : false
17:23:17.163595 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:17.164265 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_all_snapshot' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:23:17.848295 [debug] [Thread-89 ]: SQL status: OK in 0.68 seconds
17:23:17.851065 [debug] [Thread-89 ]: use_qvci set to : false
17:23:17.852258 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:17.852828 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_all_snapshot__dbt_tmp' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:23:18.538219 [debug] [Thread-89 ]: SQL status: OK in 0.68 seconds
17:23:18.541195 [debug] [Thread-89 ]: use_qvci set to : false
17:23:18.542022 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:18.542559 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_all_snapshot' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:23:19.227698 [debug] [Thread-89 ]: SQL status: OK in 0.68 seconds
17:23:19.230622 [debug] [Thread-89 ]: use_qvci set to : false
17:23:19.231167 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:19.231744 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_all_snapshot__dbt_tmp' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:23:19.907823 [debug] [Thread-89 ]: SQL status: OK in 0.68 seconds
17:23:19.909973 [debug] [Thread-89 ]: Writing runtime SQL for node "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:19.910510 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:19.911044 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

          UPDATE "test16649904071164603043_test_basic"."cc_all_snapshot"
    FROM (SELECT dbt_scd_id, dbt_change_type, dbt_valid_to FROM "test16649904071164603043_test_basic"."cc_all_snapshot__dbt_tmp") AS DBT_INTERNAL_SOURCE
    SET dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    WHERE DBT_INTERNAL_SOURCE.dbt_scd_id = "test16649904071164603043_test_basic"."cc_all_snapshot".dbt_scd_id
      AND DBT_INTERNAL_SOURCE.dbt_change_type = 'update'
      AND "test16649904071164603043_test_basic"."cc_all_snapshot".dbt_valid_to IS NULL

      
17:23:20.587759 [debug] [Thread-89 ]: SQL status: OK in 0.68 seconds
17:23:20.588312 [debug] [Thread-89 ]: Writing runtime SQL for node "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:20.589409 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:20.589409 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"} */

          INSERT INTO "test16649904071164603043_test_basic"."cc_all_snapshot" ("id", "name", "some_date", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    SELECT DBT_INTERNAL_SOURCE."id",DBT_INTERNAL_SOURCE."name",DBT_INTERNAL_SOURCE."some_date",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    FROM "test16649904071164603043_test_basic"."cc_all_snapshot__dbt_tmp" AS DBT_INTERNAL_SOURCE
    WHERE DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'

      
17:23:21.258059 [debug] [Thread-89 ]: SQL status: OK in 0.67 seconds
17:23:21.259699 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: COMMIT
17:23:21.260314 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_all_snapshot"
17:23:21.260314 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: COMMIT
17:23:21.587860 [debug] [Thread-89 ]: SQL status: OK in 0.33 seconds
17:23:21.588955 [debug] [Thread-89 ]: finished collecting timing info
17:23:21.589461 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_all_snapshot: Close
17:23:21.928564 [info ] [Thread-89 ]: 1 of 3 OK snapshotted test16649904071164603043_test_basic.cc_all_snapshot ...... [[32mOK[0m in 13.63s]
17:23:21.929746 [debug] [Thread-89 ]: Finished running node snapshot.snapshot_strategy_check_cols.cc_all_snapshot
17:23:21.930252 [debug] [Thread-89 ]: Began running node snapshot.snapshot_strategy_check_cols.cc_date_snapshot
17:23:21.930835 [info ] [Thread-89 ]: 2 of 3 START snapshot test16649904071164603043_test_basic.cc_date_snapshot ..... [RUN]
17:23:21.931342 [debug] [Thread-89 ]: Acquiring new teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:23:21.931902 [debug] [Thread-89 ]: Began compiling node snapshot.snapshot_strategy_check_cols.cc_date_snapshot
17:23:21.931902 [debug] [Thread-89 ]: Compiling snapshot.snapshot_strategy_check_cols.cc_date_snapshot
17:23:21.934553 [debug] [Thread-89 ]: finished collecting timing info
17:23:21.935093 [debug] [Thread-89 ]: Began executing node snapshot.snapshot_strategy_check_cols.cc_date_snapshot
17:23:21.937825 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:23:21.938356 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */
SELECT DatabaseName AS schema_name
        FROM DBC.DatabasesV
17:23:21.938888 [debug] [Thread-89 ]: Opening a new connection, currently in state closed
17:23:25.898144 [debug] [Thread-89 ]: SQL status: OK in 3.96 seconds
17:23:25.901257 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:23:25.901765 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

    SELECT CURRENT_TIMESTAMP(6) AS snapshot_start
  
17:23:26.547800 [debug] [Thread-89 ]: SQL status: OK in 0.65 seconds
17:23:26.552027 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:23:26.552417 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */
DROP table /*+ IF EXISTS */ "test16649904071164603043_test_basic"."cc_date_snapshot__dbt_tmp";
17:23:27.217891 [debug] [Thread-89 ]: SQL status: OK in 0.67 seconds
17:23:27.220190 [debug] [Thread-89 ]: use_qvci set to : false
17:23:27.221154 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:23:27.221712 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: 
17:23:27.221783 [debug] [Thread-89 ]: SQL status: OK in 0.0 seconds
17:23:27.222656 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:23:27.222884 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_date_snapshot' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:23:27.896549 [debug] [Thread-89 ]: SQL status: OK in 0.67 seconds
17:23:27.900226 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:23:27.900768 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

        
  CREATE  TABLE
  "test16649904071164603043_test_basic"."cc_date_snapshot__dbt_tmp"
  
    AS (
      SELECT * FROM (
        WITH snapshot_query AS (

        
    
    select * from "test16649904071164603043_test_basic"."added"

    ),

    snapshotted_data AS (

        SELECT snapshot.*,
            id AS dbt_unique_key

        FROM "test16649904071164603043_test_basic"."cc_date_snapshot" AS snapshot

    ),

    insertions_source_data AS (

        SELECT
            snapshot_query.*,
            id AS dbt_unique_key,
            TO_TIMESTAMP_TZ('2022-10-05 10:23:26.040000+00:00') AS dbt_updated_at,
            TO_TIMESTAMP_TZ('2022-10-05 10:23:26.040000+00:00') AS dbt_valid_from,
            nullif(TO_TIMESTAMP_TZ('2022-10-05 10:23:26.040000+00:00'), TO_TIMESTAMP_TZ('2022-10-05 10:23:26.040000+00:00')) AS dbt_valid_to,
            HASHROW(coalesce(cast(id AS VARCHAR(50) ), '')
         || '|' || coalesce(cast(TO_TIMESTAMP_TZ('2022-10-05 10:23:26.040000+00:00') AS VARCHAR(50) ), '')
        ) AS dbt_scd_id

        FROM snapshot_query
    ),

    updates_source_data AS (

        SELECT
            snapshot_query.*,
            id AS dbt_unique_key,
            TO_TIMESTAMP_TZ('2022-10-05 10:23:26.040000+00:00') AS dbt_updated_at,
            TO_TIMESTAMP_TZ('2022-10-05 10:23:26.040000+00:00') AS dbt_valid_from,
            TO_TIMESTAMP_TZ('2022-10-05 10:23:26.040000+00:00') AS dbt_valid_to

        FROM snapshot_query
    ),

    insertions AS (

        SELECT
            'insert' AS dbt_change_type,
            source_data.*

        FROM insertions_source_data AS source_data
        LEFT OUTER JOIN snapshotted_data ON snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
        WHERE snapshotted_data.dbt_unique_key IS NULL
           OR (
                snapshotted_data.dbt_unique_key IS NOT NULL
            AND snapshotted_data.dbt_valid_to IS NULL
            AND (
                (snapshotted_data.some_date <> source_data.some_date
        or
        (
            ((snapshotted_data.some_date IS NULL) AND NOT (source_data.some_date IS NULL))
            OR
            ((NOT snapshotted_data.some_date IS NULL) AND (source_data.some_date IS NULL))
        ))
            )
        )

    ),

    updates AS (

        SELECT
            'update' AS dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        FROM updates_source_data AS source_data
        JOIN snapshotted_data ON snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
        WHERE snapshotted_data.dbt_valid_to IS NULL
        AND (
            (snapshotted_data.some_date <> source_data.some_date
        or
        (
            ((snapshotted_data.some_date IS NULL) AND NOT (source_data.some_date IS NULL))
            OR
            ((NOT snapshotted_data.some_date IS NULL) AND (source_data.some_date IS NULL))
        ))
        )
    )

    SELECT * FROM insertions
    UNION ALL
    SELECT * FROM updates
      ) D
    ) WITH DATA
  
  ;


    
17:23:28.639631 [debug] [Thread-89 ]: SQL status: OK in 0.74 seconds
17:23:28.642537 [debug] [Thread-89 ]: use_qvci set to : false
17:23:28.643671 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:23:28.643695 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_date_snapshot__dbt_tmp' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:23:29.308953 [debug] [Thread-89 ]: SQL status: OK in 0.66 seconds
17:23:29.311633 [debug] [Thread-89 ]: use_qvci set to : false
17:23:29.312740 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:23:29.313287 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_date_snapshot' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:23:29.987855 [debug] [Thread-89 ]: SQL status: OK in 0.67 seconds
17:23:29.990387 [debug] [Thread-89 ]: use_qvci set to : false
17:23:29.991469 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:23:29.991469 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_date_snapshot__dbt_tmp' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:23:30.659315 [debug] [Thread-89 ]: SQL status: OK in 0.67 seconds
17:23:30.662047 [debug] [Thread-89 ]: use_qvci set to : false
17:23:30.664262 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:23:30.664775 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_date_snapshot' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:23:31.330500 [debug] [Thread-89 ]: SQL status: OK in 0.67 seconds
17:23:31.342437 [debug] [Thread-89 ]: use_qvci set to : false
17:23:31.343520 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:23:31.344102 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_date_snapshot__dbt_tmp' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:23:32.027949 [debug] [Thread-89 ]: SQL status: OK in 0.68 seconds
17:23:32.053557 [debug] [Thread-89 ]: Writing runtime SQL for node "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:23:32.053557 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:23:32.053557 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

          UPDATE "test16649904071164603043_test_basic"."cc_date_snapshot"
    FROM (SELECT dbt_scd_id, dbt_change_type, dbt_valid_to FROM "test16649904071164603043_test_basic"."cc_date_snapshot__dbt_tmp") AS DBT_INTERNAL_SOURCE
    SET dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    WHERE DBT_INTERNAL_SOURCE.dbt_scd_id = "test16649904071164603043_test_basic"."cc_date_snapshot".dbt_scd_id
      AND DBT_INTERNAL_SOURCE.dbt_change_type = 'update'
      AND "test16649904071164603043_test_basic"."cc_date_snapshot".dbt_valid_to IS NULL

      
17:23:32.738189 [debug] [Thread-89 ]: SQL status: OK in 0.68 seconds
17:23:32.740102 [debug] [Thread-89 ]: Writing runtime SQL for node "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:23:32.741295 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:23:32.741295 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"} */

          INSERT INTO "test16649904071164603043_test_basic"."cc_date_snapshot" ("id", "name", "some_date", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    SELECT DBT_INTERNAL_SOURCE."id",DBT_INTERNAL_SOURCE."name",DBT_INTERNAL_SOURCE."some_date",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    FROM "test16649904071164603043_test_basic"."cc_date_snapshot__dbt_tmp" AS DBT_INTERNAL_SOURCE
    WHERE DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'

      
17:23:33.418163 [debug] [Thread-89 ]: SQL status: OK in 0.67 seconds
17:23:33.419941 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: COMMIT
17:23:33.420501 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_date_snapshot"
17:23:33.420501 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: COMMIT
17:23:33.748030 [debug] [Thread-89 ]: SQL status: OK in 0.33 seconds
17:23:33.748568 [debug] [Thread-89 ]: finished collecting timing info
17:23:33.749104 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_date_snapshot: Close
17:23:34.088690 [info ] [Thread-89 ]: 2 of 3 OK snapshotted test16649904071164603043_test_basic.cc_date_snapshot ..... [[32mOK[0m in 12.16s]
17:23:34.089046 [debug] [Thread-89 ]: Finished running node snapshot.snapshot_strategy_check_cols.cc_date_snapshot
17:23:34.089945 [debug] [Thread-89 ]: Began running node snapshot.snapshot_strategy_check_cols.cc_name_snapshot
17:23:34.090309 [info ] [Thread-89 ]: 3 of 3 START snapshot test16649904071164603043_test_basic.cc_name_snapshot ..... [RUN]
17:23:34.091462 [debug] [Thread-89 ]: Acquiring new teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:23:34.092000 [debug] [Thread-89 ]: Began compiling node snapshot.snapshot_strategy_check_cols.cc_name_snapshot
17:23:34.092510 [debug] [Thread-89 ]: Compiling snapshot.snapshot_strategy_check_cols.cc_name_snapshot
17:23:34.095722 [debug] [Thread-89 ]: finished collecting timing info
17:23:34.096287 [debug] [Thread-89 ]: Began executing node snapshot.snapshot_strategy_check_cols.cc_name_snapshot
17:23:34.098477 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:23:34.098983 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */
SELECT DatabaseName AS schema_name
        FROM DBC.DatabasesV
17:23:34.098983 [debug] [Thread-89 ]: Opening a new connection, currently in state closed
17:23:37.998212 [debug] [Thread-89 ]: SQL status: OK in 3.9 seconds
17:23:38.001531 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:23:38.002074 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

    SELECT CURRENT_TIMESTAMP(6) AS snapshot_start
  
17:23:38.638767 [debug] [Thread-89 ]: SQL status: OK in 0.64 seconds
17:23:38.642557 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:23:38.643095 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */
DROP table /*+ IF EXISTS */ "test16649904071164603043_test_basic"."cc_name_snapshot__dbt_tmp";
17:23:39.313596 [debug] [Thread-89 ]: SQL status: OK in 0.67 seconds
17:23:39.323255 [debug] [Thread-89 ]: use_qvci set to : false
17:23:39.324281 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:23:39.324281 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: 
17:23:39.324792 [debug] [Thread-89 ]: SQL status: OK in 0.0 seconds
17:23:39.325303 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:23:39.325303 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_name_snapshot' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:23:39.999378 [debug] [Thread-89 ]: SQL status: OK in 0.67 seconds
17:23:40.001549 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:23:40.002103 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

        
  CREATE  TABLE
  "test16649904071164603043_test_basic"."cc_name_snapshot__dbt_tmp"
  
    AS (
      SELECT * FROM (
        WITH snapshot_query AS (

        
    
    select * from "test16649904071164603043_test_basic"."added"

    ),

    snapshotted_data AS (

        SELECT snapshot.*,
            id AS dbt_unique_key

        FROM "test16649904071164603043_test_basic"."cc_name_snapshot" AS snapshot

    ),

    insertions_source_data AS (

        SELECT
            snapshot_query.*,
            id AS dbt_unique_key,
            TO_TIMESTAMP_TZ('2022-10-05 10:23:38.140000+00:00') AS dbt_updated_at,
            TO_TIMESTAMP_TZ('2022-10-05 10:23:38.140000+00:00') AS dbt_valid_from,
            nullif(TO_TIMESTAMP_TZ('2022-10-05 10:23:38.140000+00:00'), TO_TIMESTAMP_TZ('2022-10-05 10:23:38.140000+00:00')) AS dbt_valid_to,
            HASHROW(coalesce(cast(id AS VARCHAR(50) ), '')
         || '|' || coalesce(cast(TO_TIMESTAMP_TZ('2022-10-05 10:23:38.140000+00:00') AS VARCHAR(50) ), '')
        ) AS dbt_scd_id

        FROM snapshot_query
    ),

    updates_source_data AS (

        SELECT
            snapshot_query.*,
            id AS dbt_unique_key,
            TO_TIMESTAMP_TZ('2022-10-05 10:23:38.140000+00:00') AS dbt_updated_at,
            TO_TIMESTAMP_TZ('2022-10-05 10:23:38.140000+00:00') AS dbt_valid_from,
            TO_TIMESTAMP_TZ('2022-10-05 10:23:38.140000+00:00') AS dbt_valid_to

        FROM snapshot_query
    ),

    insertions AS (

        SELECT
            'insert' AS dbt_change_type,
            source_data.*

        FROM insertions_source_data AS source_data
        LEFT OUTER JOIN snapshotted_data ON snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
        WHERE snapshotted_data.dbt_unique_key IS NULL
           OR (
                snapshotted_data.dbt_unique_key IS NOT NULL
            AND snapshotted_data.dbt_valid_to IS NULL
            AND (
                (snapshotted_data.name <> source_data.name
        or
        (
            ((snapshotted_data.name IS NULL) AND NOT (source_data.name IS NULL))
            OR
            ((NOT snapshotted_data.name IS NULL) AND (source_data.name IS NULL))
        ))
            )
        )

    ),

    updates AS (

        SELECT
            'update' AS dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        FROM updates_source_data AS source_data
        JOIN snapshotted_data ON snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
        WHERE snapshotted_data.dbt_valid_to IS NULL
        AND (
            (snapshotted_data.name <> source_data.name
        or
        (
            ((snapshotted_data.name IS NULL) AND NOT (source_data.name IS NULL))
            OR
            ((NOT snapshotted_data.name IS NULL) AND (source_data.name IS NULL))
        ))
        )
    )

    SELECT * FROM insertions
    UNION ALL
    SELECT * FROM updates
      ) D
    ) WITH DATA
  
  ;


    
17:23:40.798445 [debug] [Thread-89 ]: SQL status: OK in 0.8 seconds
17:23:40.800575 [debug] [Thread-89 ]: use_qvci set to : false
17:23:40.801685 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:23:40.802257 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_name_snapshot__dbt_tmp' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:23:41.487936 [debug] [Thread-89 ]: SQL status: OK in 0.69 seconds
17:23:41.490729 [debug] [Thread-89 ]: use_qvci set to : false
17:23:41.491830 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:23:41.492336 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_name_snapshot' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:23:42.158793 [debug] [Thread-89 ]: SQL status: OK in 0.67 seconds
17:23:42.161377 [debug] [Thread-89 ]: use_qvci set to : false
17:23:42.162399 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:23:42.162927 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_name_snapshot__dbt_tmp' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:23:42.838740 [debug] [Thread-89 ]: SQL status: OK in 0.68 seconds
17:23:42.843085 [debug] [Thread-89 ]: use_qvci set to : false
17:23:42.844214 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:23:42.844214 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_name_snapshot' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:23:43.528013 [debug] [Thread-89 ]: SQL status: OK in 0.68 seconds
17:23:43.530701 [debug] [Thread-89 ]: use_qvci set to : false
17:23:43.536526 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:23:43.536526 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

    SELECT
      ColumnsV.ColumnName AS "column",
      CASE
        WHEN ColumnsV.ColumnType = '++' THEN 'TD_ANYTYPE'
        WHEN ColumnsV.ColumnType = 'A1' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'AN' THEN 'ARRAY'
        WHEN ColumnsV.ColumnType = 'I8' THEN 'BIGINT'
        WHEN ColumnsV.ColumnType = 'BO' THEN 'BINARY LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'BF' THEN 'BYTE'
        WHEN ColumnsV.ColumnType = 'BV' THEN 'BYTE VARYING'
        WHEN ColumnsV.ColumnType = 'I1' THEN 'BYTEINT'
        WHEN ColumnsV.ColumnType = 'CF' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CV' THEN 'CHARACTER'
        WHEN ColumnsV.ColumnType = 'CO' THEN 'CHARACTER LARGE OBJECT'
        WHEN ColumnsV.ColumnType = 'D' THEN 'DECIMAL'
        WHEN ColumnsV.ColumnType = 'DA' THEN 'DATE'
        WHEN ColumnsV.ColumnType = 'F' THEN 'DOUBLE PRECISION'
        WHEN ColumnsV.ColumnType = 'I' THEN 'INTEGER'
        WHEN ColumnsV.ColumnType = 'DY' THEN 'INTERVAL DAY'
        WHEN ColumnsV.ColumnType = 'DH' THEN 'INTERVAL DAY TO HOUR'
        WHEN ColumnsV.ColumnType = 'DM' THEN 'INTERVAL DAY TO MINUTE'
        WHEN ColumnsV.ColumnType = 'DS' THEN 'INTERVAL DAY TO SECOND'
        WHEN ColumnsV.ColumnType = 'HR' THEN 'INTERVAL HOUR'
        WHEN ColumnsV.ColumnType = 'HM' THEN 'INTERVAL HOUR TO MINUTE'
        WHEN ColumnsV.ColumnType = 'HS' THEN 'INTERVAL HOUR TO SECOND'
        WHEN ColumnsV.ColumnType = 'MI' THEN 'INTERVAL MINUTE'
        WHEN ColumnsV.ColumnType = 'MS' THEN 'INTERVAL MINUTE TO SECOND'
        WHEN ColumnsV.ColumnType = 'MO' THEN 'INTERVAL MONTH'
        WHEN ColumnsV.ColumnType = 'SC' THEN 'INTERVAL SECOND'
        WHEN ColumnsV.ColumnType = 'YR' THEN 'INTERVAL YEAR'
        WHEN ColumnsV.ColumnType = 'YM' THEN 'INTERVAL YEAR TO MONTH'
        WHEN ColumnsV.ColumnType = 'N' THEN 'NUMBER'
        WHEN ColumnsV.ColumnType = 'D' THEN 'NUMERIC'
        WHEN ColumnsV.ColumnType = 'PD' THEN 'PERIOD(DATE)'
        WHEN ColumnsV.ColumnType = 'PT' THEN 'PERIOD(TIME(n))'
        WHEN ColumnsV.ColumnType = 'PZ' THEN 'PERIOD(TIME(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'PS' THEN 'PERIOD(TIMESTAMP(n))'
        WHEN ColumnsV.ColumnType = 'PM' THEN 'PERIOD(TIMESTAMP(n) WITH TIME ZONE)'
        WHEN ColumnsV.ColumnType = 'F' THEN 'REAL'
        WHEN ColumnsV.ColumnType = 'I2' THEN 'SMALLINT'
        WHEN ColumnsV.ColumnType = 'AT' THEN 'TIME'
        WHEN ColumnsV.ColumnType = 'TS' THEN 'TIMESTAMP'
        WHEN ColumnsV.ColumnType = 'TZ' THEN 'TIME WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'SZ' THEN 'TIMESTAMP WITH TIME ZONE'
        WHEN ColumnsV.ColumnType = 'UT' THEN 'USER‑DEFINED TYPE'
        WHEN ColumnsV.ColumnType = 'XM' THEN 'XML'
        ELSE 'N/A'
      END AS dtype,
      CASE
        WHEN ColumnsV.CharType = 1 THEN ColumnsV.ColumnLength
      END AS char_size,
      ColumnsV.DecimalTotalDigits AS numeric_precision,
      ColumnsV.DecimalFractionalDigits AS numeric_scale,
      NULL AS table_database,
      ColumnsV.DatabaseName AS table_schema,
      ColumnsV.TableName AS table_name,
      CASE WHEN TablesV.TableKind = 'T' THEN 'table'
        WHEN TablesV.TableKind = 'O' THEN 'table'
        WHEN TablesV.TableKind = 'V' THEN 'view'
        ELSE TablesV.TableKind
      END AS table_type,
      ColumnsV.ColumnID AS column_index
    FROM
    
      DBC.ColumnsV
    LEFT OUTER JOIN DBC.TablesV
      ON ColumnsV.DatabaseName = TablesV.DatabaseName
      AND ColumnsV.TableName = TablesV.TableName
    WHERE
      TablesV.TableKind IN ('T', 'V', 'O')
      AND ColumnsV.DatabaseName = 'test16649904071164603043_test_basic' (NOT CASESPECIFIC)
      AND ColumnsV.TableName = 'cc_name_snapshot__dbt_tmp' (NOT CASESPECIFIC)
    ORDER BY
      ColumnsV.ColumnID
    
17:23:44.207996 [debug] [Thread-89 ]: SQL status: OK in 0.67 seconds
17:23:44.210152 [debug] [Thread-89 ]: Writing runtime SQL for node "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:23:44.210775 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:23:44.211318 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

          UPDATE "test16649904071164603043_test_basic"."cc_name_snapshot"
    FROM (SELECT dbt_scd_id, dbt_change_type, dbt_valid_to FROM "test16649904071164603043_test_basic"."cc_name_snapshot__dbt_tmp") AS DBT_INTERNAL_SOURCE
    SET dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    WHERE DBT_INTERNAL_SOURCE.dbt_scd_id = "test16649904071164603043_test_basic"."cc_name_snapshot".dbt_scd_id
      AND DBT_INTERNAL_SOURCE.dbt_change_type = 'update'
      AND "test16649904071164603043_test_basic"."cc_name_snapshot".dbt_valid_to IS NULL

      
17:23:44.888038 [debug] [Thread-89 ]: SQL status: OK in 0.68 seconds
17:23:44.890058 [debug] [Thread-89 ]: Writing runtime SQL for node "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:23:44.891183 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:23:44.891183 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "node_id": "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"} */

          INSERT INTO "test16649904071164603043_test_basic"."cc_name_snapshot" ("id", "name", "some_date", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    SELECT DBT_INTERNAL_SOURCE."id",DBT_INTERNAL_SOURCE."name",DBT_INTERNAL_SOURCE."some_date",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    FROM "test16649904071164603043_test_basic"."cc_name_snapshot__dbt_tmp" AS DBT_INTERNAL_SOURCE
    WHERE DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'

      
17:23:45.557963 [debug] [Thread-89 ]: SQL status: OK in 0.67 seconds
17:23:45.559037 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: COMMIT
17:23:45.559589 [debug] [Thread-89 ]: Using teradata connection "snapshot.snapshot_strategy_check_cols.cc_name_snapshot"
17:23:45.560156 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: COMMIT
17:23:45.888064 [debug] [Thread-89 ]: SQL status: OK in 0.33 seconds
17:23:45.888572 [debug] [Thread-89 ]: finished collecting timing info
17:23:45.889143 [debug] [Thread-89 ]: On snapshot.snapshot_strategy_check_cols.cc_name_snapshot: Close
17:23:46.238657 [info ] [Thread-89 ]: 3 of 3 OK snapshotted test16649904071164603043_test_basic.cc_name_snapshot ..... [[32mOK[0m in 12.15s]
17:23:46.238657 [debug] [Thread-89 ]: Finished running node snapshot.snapshot_strategy_check_cols.cc_name_snapshot
17:23:46.241156 [debug] [MainThread]: Acquiring new teradata connection "master"
17:23:46.241481 [debug] [MainThread]: Using teradata connection "master"
17:23:46.242019 [debug] [MainThread]: On master: 
17:23:46.242710 [debug] [MainThread]: Opening a new connection, currently in state closed
17:23:49.548126 [debug] [MainThread]: SQL status: OK in 3.31 seconds
17:23:49.549199 [debug] [MainThread]: On master: COMMIT
17:23:49.549701 [debug] [MainThread]: Using teradata connection "master"
17:23:49.549760 [debug] [MainThread]: On master: COMMIT
17:23:49.878711 [debug] [MainThread]: SQL status: OK in 0.33 seconds
17:23:49.879384 [debug] [MainThread]: On master: Close
17:23:50.218082 [info ] [MainThread]: 
17:23:50.218607 [info ] [MainThread]: Finished running 3 snapshots in 55.48s.
17:23:50.219132 [debug] [MainThread]: Connection 'master' was properly closed.
17:23:50.219643 [debug] [MainThread]: Connection 'list_schemas' was properly closed.
17:23:50.219643 [debug] [MainThread]: Connection 'list_None_test16649904071164603043_test_basic' was properly closed.
17:23:50.220175 [debug] [MainThread]: Connection 'snapshot.snapshot_strategy_check_cols.cc_name_snapshot' was properly closed.
17:23:50.225933 [info ] [MainThread]: 
17:23:50.226447 [info ] [MainThread]: [32mCompleted successfully[0m
17:23:50.227007 [info ] [MainThread]: 
17:23:50.227548 [info ] [MainThread]: Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
17:23:50.228074 [debug] [MainThread]: Acquiring new teradata connection "_test"
17:23:50.228617 [debug] [MainThread]: Opening a new connection, currently in state init
17:23:54.308167 [debug] [MainThread]: On _test: Close
17:23:54.660943 [debug] [MainThread]: Acquiring new teradata connection "_test"
17:23:54.661460 [debug] [MainThread]: Opening a new connection, currently in state closed
17:23:58.639087 [debug] [MainThread]: On _test: Close
17:23:58.988497 [debug] [MainThread]: Acquiring new teradata connection "_test"
17:23:58.989039 [debug] [MainThread]: Opening a new connection, currently in state closed
17:24:03.038353 [debug] [MainThread]: On _test: Close
17:24:03.389010 [debug] [MainThread]: Acquiring new teradata connection "_test"
17:24:03.390363 [debug] [MainThread]: Acquiring new teradata connection "_test"
17:24:03.391001 [debug] [MainThread]: Using teradata connection "_test"
17:24:03.391001 [debug] [MainThread]: On _test: 
17:24:03.391549 [debug] [MainThread]: Opening a new connection, currently in state closed
17:24:06.698116 [debug] [MainThread]: SQL status: OK in 3.31 seconds
17:24:06.698467 [debug] [MainThread]: Using teradata connection "_test"
17:24:06.698714 [debug] [MainThread]: On _test: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "connection_name": "_test"} */
update "test16649904071164603043_test_basic"."added" set name = concat(cast(trim(name) as varchar(63800)), '_updated') where id < 11
17:24:08.088320 [debug] [MainThread]: teradata adapter: Teradata error: [Version 17.20.0.5] [Session 1940] [Teradata Database] [Error 3706] Syntax error: expected something between '(' and the 'cast' keyword.
 at gosqldriver/teradatasql.formatError ErrorUtil.go:88
 at gosqldriver/teradatasql.(*teradataConnection).formatDatabaseError ErrorUtil.go:216
 at gosqldriver/teradatasql.(*teradataConnection).makeChainedDatabaseError ErrorUtil.go:232
 at gosqldriver/teradatasql.(*teradataConnection).processErrorParcel TeradataConnection.go:803
 at gosqldriver/teradatasql.(*TeradataRows).processResponseBundle TeradataRows.go:2229
 at gosqldriver/teradatasql.(*TeradataRows).executeSQLRequest TeradataRows.go:814
 at gosqldriver/teradatasql.newTeradataRows TeradataRows.go:673
 at gosqldriver/teradatasql.(*teradataStatement).QueryContext TeradataStatement.go:122
 at gosqldriver/teradatasql.(*teradataConnection).QueryContext TeradataConnection.go:1307
 at database/sql.ctxDriverQuery ctxutil.go:48
 at database/sql.(*DB).queryDC.func1 sql.go:1759
 at database/sql.withLock sql.go:3437
 at database/sql.(*DB).queryDC sql.go:1754
 at database/sql.(*Conn).QueryContext sql.go:2013
 at main.goCreateRows goside.go:666
 at _cgoexp_7cdf4597d74c_goCreateRows _cgo_gotypes.go:340
 at runtime.cgocallbackg1 cgocall.go:314
 at runtime.cgocallbackg cgocall.go:233
 at runtime.cgocallback asm_amd64.s:971
 at runtime.goexit asm_amd64.s:1571
17:24:08.089244 [debug] [MainThread]: On _test: ROLLBACK
17:24:08.418186 [debug] [MainThread]: On _test: Close
17:24:08.820490 [debug] [MainThread]: Acquiring new teradata connection "_test"
17:24:08.829390 [debug] [MainThread]: Dropping schema "_ReferenceKey(database=None, schema='test16649904071164603043_test_basic', identifier=None)".
17:24:08.832019 [debug] [MainThread]: Using teradata connection "_test"
17:24:08.832996 [debug] [MainThread]: On _test: 
17:24:08.832996 [debug] [MainThread]: Opening a new connection, currently in state closed
17:24:12.148351 [debug] [MainThread]: SQL status: OK in 3.32 seconds
17:24:12.148734 [debug] [MainThread]: Using teradata connection "_test"
17:24:12.149031 [debug] [MainThread]: On _test: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "connection_name": "_test"} */
DELETE DATABASE /*+ IF EXISTS */ "test16649904071164603043_test_basic" ALL;
17:24:13.028058 [debug] [MainThread]: SQL status: OK in 0.88 seconds
17:24:13.029157 [debug] [MainThread]: Using teradata connection "_test"
17:24:13.029157 [debug] [MainThread]: On _test: /* {"app": "dbt", "dbt_version": "1.1.0", "profile_name": "test", "target_name": "default", "connection_name": "_test"} */
DROP DATABASE /*+ IF EXISTS */ "test16649904071164603043_test_basic";
17:24:13.728246 [debug] [MainThread]: SQL status: OK in 0.69 seconds
17:24:13.729118 [debug] [MainThread]: On _test: ROLLBACK
17:24:14.058246 [debug] [MainThread]: On _test: Close
17:24:14.380185 [debug] [MainThread]: Connection '_test' was properly closed.
17:24:14.404817 [info ] [MainThread]: Partial parse save file not found. Starting full parse.
17:24:14.404817 [debug] [MainThread]: Parsing macros\adapters.sql
17:24:14.422975 [debug] [MainThread]: Parsing macros\catalog.sql
17:24:14.433177 [debug] [MainThread]: Parsing macros\materializations\incremental\helpers.sql
17:24:14.435251 [debug] [MainThread]: Parsing macros\materializations\incremental\incremental.sql
17:24:14.435251 [debug] [MainThread]: Parsing macros\materializations\seed\seed.sql
17:24:14.455382 [debug] [MainThread]: Parsing macros\materializations\snapshot\snapshot.sql
17:24:14.483898 [debug] [MainThread]: Parsing macros\materializations\snapshot\snapshot_merge.sql
17:24:14.486022 [debug] [MainThread]: Parsing macros\materializations\snapshot\strategies.sql
17:24:14.486022 [debug] [MainThread]: Parsing macros\materializations\test\test.sql
17:24:14.494146 [debug] [MainThread]: Parsing macros\adapters\columns.sql
17:24:14.496222 [debug] [MainThread]: Parsing macros\adapters\freshness.sql
17:24:14.504295 [debug] [MainThread]: Parsing macros\adapters\indexes.sql
17:24:14.506416 [debug] [MainThread]: Parsing macros\adapters\metadata.sql
17:24:14.506416 [debug] [MainThread]: Parsing macros\adapters\persist_docs.sql
17:24:14.516652 [debug] [MainThread]: Parsing macros\adapters\relation.sql
17:24:14.526827 [debug] [MainThread]: Parsing macros\adapters\schema.sql
17:24:14.526827 [debug] [MainThread]: Parsing macros\etc\datetime.sql
17:24:14.534953 [debug] [MainThread]: Parsing macros\etc\statement.sql
17:24:14.537081 [debug] [MainThread]: Parsing macros\generic_test_sql\accepted_values.sql
17:24:14.537081 [debug] [MainThread]: Parsing macros\generic_test_sql\not_null.sql
17:24:14.537081 [debug] [MainThread]: Parsing macros\generic_test_sql\relationships.sql
17:24:14.537081 [debug] [MainThread]: Parsing macros\generic_test_sql\unique.sql
17:24:14.537081 [debug] [MainThread]: Parsing macros\get_custom_name\get_custom_alias.sql
17:24:14.545240 [debug] [MainThread]: Parsing macros\get_custom_name\get_custom_database.sql
17:24:14.547253 [debug] [MainThread]: Parsing macros\get_custom_name\get_custom_schema.sql
17:24:14.547253 [debug] [MainThread]: Parsing macros\materializations\configs.sql
17:24:14.547253 [debug] [MainThread]: Parsing macros\materializations\hooks.sql
17:24:14.555265 [debug] [MainThread]: Parsing macros\materializations\models\incremental\column_helpers.sql
17:24:14.557275 [debug] [MainThread]: Parsing macros\materializations\models\incremental\incremental.sql
17:24:14.567366 [debug] [MainThread]: Parsing macros\materializations\models\incremental\is_incremental.sql
17:24:14.567366 [debug] [MainThread]: Parsing macros\materializations\models\incremental\merge.sql
17:24:14.577388 [debug] [MainThread]: Parsing macros\materializations\models\incremental\on_schema_change.sql
17:24:14.587538 [debug] [MainThread]: Parsing macros\materializations\models\table\create_table_as.sql
17:24:14.595595 [debug] [MainThread]: Parsing macros\materializations\models\table\table.sql
17:24:14.597700 [debug] [MainThread]: Parsing macros\materializations\models\view\create_or_replace_view.sql
17:24:14.605725 [debug] [MainThread]: Parsing macros\materializations\models\view\create_view_as.sql
17:24:14.607845 [debug] [MainThread]: Parsing macros\materializations\models\view\helpers.sql
17:24:14.607845 [debug] [MainThread]: Parsing macros\materializations\models\view\view.sql
17:24:14.615957 [debug] [MainThread]: Parsing macros\materializations\seeds\helpers.sql
17:24:14.628310 [debug] [MainThread]: Parsing macros\materializations\seeds\seed.sql
17:24:14.628310 [debug] [MainThread]: Parsing macros\materializations\snapshots\helpers.sql
17:24:14.638535 [debug] [MainThread]: Parsing macros\materializations\snapshots\snapshot.sql
17:24:14.648669 [debug] [MainThread]: Parsing macros\materializations\snapshots\snapshot_merge.sql
17:24:14.648669 [debug] [MainThread]: Parsing macros\materializations\snapshots\strategies.sql
17:24:14.669078 [debug] [MainThread]: Parsing macros\materializations\tests\helpers.sql
17:24:14.669078 [debug] [MainThread]: Parsing macros\materializations\tests\test.sql
17:24:14.669078 [debug] [MainThread]: Parsing macros\materializations\tests\where_subquery.sql
