target:
  type: teradata
  server: "{{ env_var('DBT_TERADATA_SERVER_NAME', 'sdt54383.labs.teradata.com') }}"
  username: "{{ env_var('DBT_TERADATA_USERNAME', 'dbc') }}"
  password: "{{ env_var('DBT_TERADATA_PASSWORD', 'dbc') }}"
  schema: "dbt_test_{{ var('_dbt_random_suffix') }}"
  tmode: ANSI
  log: "0"

projects:
  - name: validate_teradata_cases
    paths:
      models/table_with_cte.sql: |
        {{
            config(
                materialized="table"
            )
        }}
        WITH
        source_a AS (
            SELECT 1 AS a1, 2 AS a2
        ),
        source_b AS (
            SELECT 1 AS b1, 2 AS b2
        )
        SELECT * FROM source_a, source_b

      models/table_without_cte.sql: |
        {{
            config(
                materialized="table"
            )
        }}
        SELECT 1 AS a1, 2 AS a2, 1 AS b1, 2 AS b2

      models/view_with_cte.sql: |
        {{
            config(
                materialized="view"
            )
        }}
        WITH
        source_a AS (
            SELECT 1 AS a1, 2 AS a2
        ),
        source_b AS (
            SELECT 1 AS b1, 2 AS b2
        )
        SELECT * FROM source_a, source_b

      models/view_without_cte.sql: |
        {{
            config(
                materialized="view"
            )
        }}
        WITH
        source_a AS (
            select 1 AS a1, 2 AS a2
        ),
        source_b AS (
            select 1 AS b1, 2 AS b2
        )
        SELECT * FROM source_a, source_b

      models/table_with_cte_comments.sql: |
              {{
                  config(
                      materialized="table"
                  )
              }}
              -- This is a test comment
              WITH
              source_a AS (
                  SELECT 1 AS a1, 2 AS a2
              ),
              source_b AS (
                  SELECT 1 AS b1, 2 AS b2
              )
              SELECT * FROM source_a, source_b

      models/schema.yaml: |
        version: 2
        models:
          - name: table_with_cte
            columns:
            - name: a1
              tests:
                - not_null
            - name: a2
              tests:
                - not_null
            - name: b1
              tests:
                - not_null
            - name: b2
              tests:
                - not_null
          - name: table_without_cte
            columns:
            - name: a1
              tests:
                - not_null
            - name: a2
              tests:
                - not_null
            - name: b1
              tests:
                - not_null
            - name: b2
              tests:
                - not_null
          - name: view_with_cte
            columns:
            - name: a1
              tests:
                - not_null
            - name: a2
              tests:
                - not_null
            - name: b1
              tests:
                - not_null
            - name: b2
              tests:
                - not_null
          - name: view_without_cte
            columns:
            - name: a1
              tests:
                - not_null
            - name: a2
              tests:
                - not_null
            - name: b1
              tests:
                - not_null
            - name: b2
              tests:
                - not_null
    facts:
      run:
        length: 5
        names:
            - table_with_cte
            - table_without_cte
            - view_with_cte
            - view_without_cte
            - table_with_cte_comments
      persisted_relations:
          - table_with_cte
          - table_without_cte
          - view_with_cte
          - view_without_cte
          - table_with_cte_comments
      table_with_cte:
          rowcount: 1
      table_without_cte:
          rowcount: 1
      view_with_cte:
          rowcount: 1
      view_without_cte:
          rowcount: 1
      expected_types_view:
          table_with_cte: table
          table_without_cte: table
          view_with_cte: view
          view_without_cte: view
          table_with_cte_comments: table
      expected_types_table:
          table_with_cte: table
          table_without_cte: table
          view_with_cte: view
          view_without_cte: view
          table_with_cte_comments: table
      catalog:
          nodes:
              length: 5
          sources:
              length: 0
  - name: validate_teradata_fastload
    paths:
      seeds/test_table.csv: |
        id,attrA,attrB
        1,val1A,val1B
        2,val2A,val2B
        3,val3A,val3B
        4,val4A,val4B

      dbt_project.yml: |
        name: 'validate_teradata_fastload'
        version: '1.0.0'
        config-version: 2
        seeds:
          validate_teradata_fastload:
            +use_fastload: true
    facts:
      run:
        length: 1
      test_table:
        rowcount: 4

    facts:
      run:
        length: 1
      test_table:
        rowcount: 4
      table_from_source:
        rowcount: 4
  - name: validate_teradata_sources
    paths:
      seeds/test_table.csv: |
        id,attrA,attrB
        1,val1A,val1B
        2,val2A,val2B
        3,val3A,val3B
        4,val4A,val4B

      models/table_from_source.sql: |
        SELECT * FROM {{ source('alias_source_schema', 'alias_source_table') }}

      models/sources.yml: |
        version: 2
        sources:
          - name: alias_source_schema
            schema: "{{ target.schema }}"
            tables:
              - name: alias_source_table
                identifier: test_table
    facts:
      run:
        length: 1
      test_table:
        rowcount: 4
      table_from_source:
        rowcount: 4
  - name: validate_teradata_catalog
    paths:
      seeds/test_table.csv: |
        id,attrA,attrB
        1,val1A,val1B
        2,val2A,val2B
        3,val3A,val3B
        4,val4A,val4B

      models/table_from_source.sql: |
        {{
            config(
                materialized="table"
            )
        }}
        SELECT * FROM {{ source('alias_source_schema', 'alias_source_table') }}

      models/view_from_source.sql: |
        {{
            config(
                materialized="view"
            )
        }}
        SELECT * FROM {{ source('alias_source_schema', 'alias_source_table') }}

      models/sources.yml: |
        version: 2
        sources:
          - name: alias_source_schema
            schema: "{{ target.schema }}"
            tables:
              - name: alias_source_table
                identifier: test_table
    facts:
      run:
        length: 1
      test_table:
        rowcount: 4
      table_from_source:
        rowcount: 4
      catalog:
        nodes:
          length: 3
          names:
            - test_table
            - table_from_source
            - view_from_source
        sources:
          length: 1
          names:
            - test_table
  - name: validate_teradata_create_table
    paths:
      seeds/test_table_in_create_test.csv: |
        id,attrA,attrB,create_date
        1,val1A,val1B,2020-03-05
        2,val2A,val2B,2020-04-05
        3,val3A,val3B,2020-05-05
        4,val4A,val4B,2020-10-05

      models/table_with_cte.sql: |
        {{
            config(
                materialized="table"
            )
        }}
        WITH
        source_a AS (
            select 1 AS id, 'val1A' AS attrA, 'val1B' AS attrB
        ),
        source_b AS (
            SELECT to_date('2020-03-05') AS create_date
        )
        SELECT * FROM source_a, source_b

      models/table_no_config.sql: |
        {{
            config(
                materialized="table"
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}


      models/table_with_table_kind.sql: |
        {{
            config(
                materialized="table",
                table_kind="multiset"
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_table_kind.sql: |
        {{
            config(
                materialized="table",
                table_kind="multiset"
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

      models/table_with_table_option.sql: |
        {{
            config(
                materialized="table",
                table_option="NO FALLBACK, NO JOURNAL, CHECKSUM = ON"
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_table_option.sql: |
        {{
            config(
                materialized="table",
                table_option="NO FALLBACK, NO JOURNAL, CHECKSUM = ON"
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

      models/table_with_table_kind_and_table_option.sql: |
        {{
            config(
                materialized="table",
                table_kind="multiset",
                table_option="NO FALLBACK, NO JOURNAL, CHECKSUM = ON"
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_table_kind_and_table_option.sql: |
        {{
            config(
                materialized="table",
                table_kind="multiset",
                table_option="NO FALLBACK, NO JOURNAL, CHECKSUM = ON"
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

      models/table_with_many_table_options.sql: |
        {{
            config(
                materialized="table",
                table_option="NO FALLBACK, NO JOURNAL, CHECKSUM = ON,
                  NO MERGEBLOCKRATIO,
                  WITH CONCURRENT ISOLATED LOADING FOR ALL"
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_many_table_options.sql: |
        {{
            config(
                materialized="table",
                table_option="NO FALLBACK, NO JOURNAL, CHECKSUM = ON,
                  NO MERGEBLOCKRATIO,
                  WITH CONCURRENT ISOLATED LOADING FOR ALL"
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

      models/table_with_statistics.sql: |
        {{
            config(
                materialized="table",
                with_statistics="true"
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_statistics.sql: |
        {{
            config(
                materialized="table",
                with_statistics="true"
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

      models/table_with_options_and_statistics.sql: |
        {{
            config(
                materialized="table",
                table_option="NO FALLBACK, NO JOURNAL, CHECKSUM = ON,
                  NO MERGEBLOCKRATIO,
                  WITH CONCURRENT ISOLATED LOADING FOR ALL",
                with_statistics="true"
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_options_and_statistics.sql: |
        {{
            config(
                materialized="table",
                table_option="NO FALLBACK, NO JOURNAL, CHECKSUM = ON,
                  NO MERGEBLOCKRATIO,
                  WITH CONCURRENT ISOLATED LOADING FOR ALL",
                with_statistics="true"
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

      models/table_with_index.sql: |
        {{
            config(
                materialized="table",
                index="PRIMARY INDEX(id)
                PARTITION BY RANGE_N(create_date
                              BETWEEN DATE '2020-01-01'
                              AND     DATE '2021-01-01'
                              EACH INTERVAL '1' MONTH)"
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_index.sql: |
        {{
            config(
                materialized="table",
                index="PRIMARY INDEX(id)
                PARTITION BY RANGE_N(create_date
                              BETWEEN DATE '2020-01-01'
                              AND     DATE '2021-01-01'
                              EACH INTERVAL '1' MONTH)"
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

      models/table_with_larger_index.sql: |
        {{
            config(
                materialized="table",
                index="PRIMARY INDEX(id)
                PARTITION BY RANGE_N(create_date
                              BETWEEN DATE '2020-01-01'
                              AND     DATE '2021-01-01'
                              EACH INTERVAL '1' MONTH)"
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_larger_index.sql: |
        {{
            config(
                materialized="table",
                index="PRIMARY INDEX(id)
                PARTITION BY RANGE_N(create_date
                              BETWEEN DATE '2020-01-01'
                              AND     DATE '2021-01-01'
                              EACH INTERVAL '1' MONTH)"
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

      models/table_with_kind_options_index.sql: |
        {{
            config(
                materialized="table",
                table_kind="multiset",
                table_option="NO FALLBACK, NO JOURNAL, CHECKSUM = ON",
                index="PRIMARY INDEX(id)
                PARTITION BY RANGE_N(create_date
                              BETWEEN DATE '2020-01-01'
                              AND     DATE '2021-01-01'
                              EACH INTERVAL '1' MONTH)
                      INDEX index_attrA (attrA) WITH LOAD IDENTITY"
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_kind_options_index.sql: |
        {{
            config(
                materialized="table",
                table_kind="multiset",
                table_option="NO FALLBACK, NO JOURNAL, CHECKSUM = ON",
                index="PRIMARY INDEX(id)
                PARTITION BY RANGE_N(create_date
                              BETWEEN DATE '2020-01-01'
                              AND     DATE '2021-01-01'
                              EACH INTERVAL '1' MONTH)
                      INDEX index_attrA (attrA) WITH LOAD IDENTITY"
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

      models/table_with_kind_options_stats_index.sql: |
        {{
            config(
                materialized="table",
                table_kind="multiset",
                table_option="NO FALLBACK, NO JOURNAL, CHECKSUM = ON",
                with_statistics="true",
                index="PRIMARY INDEX(id)
                PARTITION BY RANGE_N(create_date
                              BETWEEN DATE '2020-01-01'
                              AND     DATE '2021-01-01'
                              EACH INTERVAL '1' MONTH)
                      INDEX index_attrA (attrA) WITH LOAD IDENTITY"
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_kind_options_stats_index.sql: |
        {{
            config(
                materialized="table",
                table_kind="multiset",
                table_option="NO FALLBACK, NO JOURNAL, CHECKSUM = ON",
                with_statistics="true",
                index="PRIMARY INDEX(id)
                PARTITION BY RANGE_N(create_date
                              BETWEEN DATE '2020-01-01'
                              AND     DATE '2021-01-01'
                              EACH INTERVAL '1' MONTH)
                      INDEX index_attrA (attrA) WITH LOAD IDENTITY"
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

    facts:
      run:
        length: 22
  - name: validate_teradata_case_sensitivity
    paths:
      models/table_from_source.sql: |
        {{
            config(
              materialized="table",
              schema="DBT_TEST"
            )
        }}

        SELECT * FROM dbc.dbcinfo

  - name: validate_teradata_case_sensitivity_with_macro_override
    paths:
      models/dbcinfo.sql: |
        {{
            config(
              materialized="table",
              schema="DBT_TEST_IS_THE_BEST"
            )
        }}
        SELECT * FROM dbc.dbcinfo

      macros/generate_schema_name.sql: |
        {% macro generate_schema_name(custom_schema_name, node) -%}
          {%- if custom_schema_name is none -%}
            {{ target.schema }}
          {% else %}
            {{ custom_schema_name | trim | lower }}
          {%- endif -%}
        {%- endmacro %}

      dbt_project.yml: |
        name: 'validate_teradata_case_sensitivity_with_macro_override'
        version: '1.0.0'
        config-version: 2
        dispatch:
        - macro_namespace: dbt
          search_order: ['validate_teradata_case_sensitivity_with_macro_override', 'dbt']

  - name: validate_teradata_seed_type_inference
    paths:
      data/test_table_for_type_inference.csv: |
        id,timestamp_column,date_column,float_column,integer_column,boolean_column
        1,2022-01-13 13:04:34,2022-01-13,10.03,10234234,true
        2,2022-02-13 13:14:34,2022-02-13,11.03,10234234,true
        3,2022-03-13 13:24:34,2022-03-13,12.03,10234234,true
        4,2022-04-13 13:34:34,2022-04-13,13.03,10234234,true
        5,2022-05-13 13:44:34,2022-05-13,14.03,10234234,true
        6,2022-06-13 13:54:34,2022-06-13,15.03,10234234,false
        7,2022-07-13 14:04:34,2022-07-13,16.03,10234234,false
        8,2022-08-13 14:24:34,2022-08-13,17.03,10234234,false
        9,2022-09-13 14:54:34,2022-09-13,18.0,10234234,false
        0,2022-10-13 16:24:34,2022-10-13,19.0343,10234234,false

  - name: validate_teradata_timestamp_macro
    paths:
      seeds/test_table_in_timestamp_macro_test.csv: |
        id,attrA,attrB,create_date
        1,val1A,val1B,2020-03-05
        2,val2A,val2B,2020-04-05
        3,val3A,val3B,2020-05-05
        4,val4A,val4B,2020-10-05

      snapshots/test_table_snapshot.sql: |
        {% snapshot orders_snapshot %}

        {{ config(
          check_cols=['create_date'],
          unique_key='id',
          strategy='check',
          target_schema='dbt_test_table_snapshot_schema'
        ) }}
        SELECT * FROM {{ ref('test_table_in_timestamp_macro_test') }}

        {% endsnapshot %}

      macros/macros.sql: |
        -- override this macro to simulate specific time with full seconds
        {% macro teradata__current_timestamp() -%}
          to_timestamp_tz('2022-01-27 15:15:21.000000-05:00')
        {%- endmacro %}

  - name: validate_teradata_freshness_test
    paths:
      models/data_with_timestamp.sql: |
        {{
          config(
            materialized="table"
          )
        }}
        SELECT '100' AS important_data, current_timestamp - INTERVAL '1' DAY AS timestamp_column

      models/sources.yml: |
        version: 2

        sources:
          - name: validate_teradata_freshness_test
            schema: "{{ target.schema }}"
            database: "{{ target.schema }}"
            freshness: # default freshness
              warn_after: {count: 24, period: hour}
            loaded_at_field: timestamp_column
            tables:
              - name: data_with_timestamp


sequences:

  test_dbt_teradata:
    project: validate_teradata_cases
    sequence:
      - type: dbt
        cmd: run
      - type: run_results
        exists: True
      - type: run_results
        length: fact.run.length
      - type: relation_types
        expect: fact.expected_types_table
      - type: relation_rows
        name: table_with_cte
        length: fact.table_with_cte.rowcount
      - type: relation_rows
        name: table_without_cte
        length: fact.table_without_cte.rowcount
      - type: relation_rows
        name: view_with_cte
        length: fact.view_with_cte.rowcount
      - type: relation_rows
        name: view_without_cte
        length: fact.view_without_cte.rowcount
      - type: relations_equal
        relations: fact.persisted_relations
      - type: dbt
        cmd: docs generate
      - type: catalog
        exists: True
        nodes:
          length: fact.catalog.nodes.length
        sources:
          length: fact.catalog.sources.length
  test_dbt_teradata_fastload:
    project: validate_teradata_fastload
    sequence:
      - type: dbt
        cmd: seed
      - type: run_results
        exists: True
      - type: run_results
        length: fact.run.length
      - type: relation_rows
        name: test_table
        length: fact.test_table.rowcount
  test_dbt_teradata_sources:
    project: validate_teradata_sources
    sequence:
      - type: dbt
        cmd: seed
      - type: run_results
        exists: True
      - type: run_results
        length: fact.run.length
      - type: relation_rows
        name: test_table
        length: fact.test_table.rowcount
      - type: dbt
        cmd: run
      - type: run_results
        exists: True
      - type: run_results
        length: fact.run.length
      - type: relation_rows
        name: table_from_source
        length: fact.table_from_source.rowcount
  test_dbt_teradata_docs_with_sources:
    project: validate_teradata_sources
    sequence:
      - type: dbt
        cmd: docs generate
      - type: run_results
        exists: True
  test_dbt_teradata_catalog:
    project: validate_teradata_catalog
    sequence:
      - type: dbt
        cmd: seed
      - type: run_results
        exists: True
      - type: dbt
        cmd: run
      - type: run_results
        exists: True
      - type: dbt
        cmd: docs generate
      - type: run_results
        exists: True
      - type: catalog
        exists: True
        nodes:
          length: fact.catalog.nodes.length
          names: fact.catalog.nodes.names
        sources:
          length: fact.catalog.sources.length
          names: fact.catalog.sources.names
  test_dbt_teradata_seed_twice:
    project: validate_teradata_sources
    sequence:
      - type: dbt
        cmd: seed
      - type: run_results
        exists: True
      - type: dbt
        cmd: seed
      - type: run_results
        exists: True
  test_dbt_teradata_create_table:
    project: validate_teradata_create_table
    sequence:
      - type: dbt
        cmd: seed
      - type: run_results
        exists: True
      - type: dbt
        cmd: run
      - type: run_results
        exists: True
      - type: run_results
        length: fact.run.length
  test_dbt_teradata_case_sensitivity:
    project: validate_teradata_case_sensitivity
    sequence:
      - type: dbt
        cmd: run
      - type: run_results
        exists: True
      - type: dbt
        cmd: run
      - type: run_results
        exists: True
  test_dbt_teradata_case_sensitivity_with_macro_override:
    project: validate_teradata_case_sensitivity_with_macro_override
    sequence:
      - type: dbt
        cmd: run
      - type: run_results
        exists: True
      - type: dbt
        cmd: run
      - type: run_results
        exists: True

  test_dbt_teradata_seed_type_inference:
    project: validate_teradata_seed_type_inference
    sequence:
      - type: dbt
        cmd: seed
      - type: run_results
        exists: True

  test_dbt_teradata_timestamp_macro:
    project: validate_teradata_timestamp_macro
    sequence:
      - type: dbt
        cmd: seed
      - type: run_results
        exists: True
      - type: dbt
        cmd: snapshot
      - type: run_results
        exists: True

  test_dbt_teradata_freshness_test:
    project: validate_teradata_freshness_test
    sequence:
      - type: dbt
        cmd: run
      - type: run_results
        exists: True
      - type: dbt
        cmd: source freshness
      - type: run_results
        exists: True
